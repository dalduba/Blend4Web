{"callbacks": {"FPSCallback": {"callback_params": [{"param_name": "fps_avg", "param_desc": "Averaged rendering FPS.", "param_type": "Number"}, {"param_name": "phy_fps_avg", "param_desc": "Averaged physics FPS.", "param_type": "Number"}]}, "CollisionImpulseCallback": {"callback_params": [{"param_name": "impulse", "param_desc": "Impulse applied on collision point.", "param_type": "Number"}]}, "AnimFinishCallback": {"callback_params": [{"param_name": "obj", "param_desc": "Animated object.", "param_type": "Object3D"}]}, "LoopCallback": {"callback_params": [{"param_name": "timeline", "param_desc": "Timeline", "param_type": "Number"}, {"param_name": "delta", "param_desc": "Delta", "param_type": "Number"}]}, "StageloadCallback": {"callback_params": [{"param_name": "percentage", "param_desc": "Loading progress (0-100)", "param_type": "Number"}]}, "ProgressCallback": {"callback_params": [{"param_name": "value", "param_desc": "Loading percentage", "param_type": "Number"}]}, "ManifoldLogicFunction": {"callback_params": [{"param_name": "s", "param_desc": "Numeric array with sensor values.", "param_type": "Array"}]}, "CollisionCallback": {"callback_params": [{"param_name": "result", "param_desc": "Collision result flag.", "param_type": "Boolean"}, {"param_name": "coll_obj", "param_desc": "The target collision object, i.e the object", "param_type": "?Object3D"}, {"param_name": "coll_pos", "param_desc": "Position of collision point.", "param_type": "?Vec3"}, {"param_name": "coll_norm", "param_desc": "Normal of collision point.", "param_type": "?Vec3"}, {"param_name": "coll_dist", "param_desc": "Distance between collision points of colliding", "param_type": "?Number"}]}, "NlaFinishCallback": {}, "AssetCallback": {"callback_params": [{"param_name": "data", "param_desc": "Loaded data", "param_type": "Data"}, {"param_name": "uri", "param_desc": "Data URI", "param_type": "String"}, {"param_name": "type", "param_desc": "Data type", "param_type": "Number"}, {"param_name": "filepath", "param_desc": "Data filepath", "param_type": "String"}, {"param_name": "[optional_param]", "param_desc": "Optional parameter", "param_type": "*"}]}, "RayTestCallback": {"callback_params": [{"param_name": "id", "param_desc": "Ray Test ID", "param_type": "Number"}, {"param_name": "hit_fract", "param_desc": "Fraction of ray length where hit has occured (0-1)", "param_type": "Number"}, {"param_name": "obj_hit", "param_desc": "Hit Object 3D", "param_type": "?Object3D"}, {"param_name": "hit_time", "param_desc": "Time the hit happened.", "param_type": "Number"}]}, "RenderCallback": {"callback_params": [{"param_name": "delta", "param_desc": "Delta", "param_type": "Number"}, {"param_name": "timeline", "param_desc": "Timeline", "param_type": "Number"}]}, "LoadedCallback": {"callback_params": [{"param_name": "data_id", "param_desc": "Data ID", "param_type": "Number"}, {"param_name": "success", "param_desc": "Load success", "param_type": "Boolean"}]}, "PackCallback": {}, "AnchorMoveCallback": {"callback_params": [{"param_name": "x", "param_desc": "X (left) canvas coordinate.", "param_type": "Number"}, {"param_name": "y", "param_desc": "Y (top) canvas coordinate.", "param_type": "Number"}, {"param_name": "appearance", "param_desc": "Anchor appearance, one of \"visible\", \"out\",", "param_type": "String"}, {"param_name": "obj", "param_desc": "Anchor object.", "param_type": "Object3D"}, {"param_name": "anchor", "param_desc": "Anchor HTML element", "param_type": "?HtmlElement"}]}, "RayTestCallbackPosNorm": {"callback_params": [{"param_name": "id", "param_desc": "Ray Test ID", "param_type": "Number"}, {"param_name": "hit_fract", "param_desc": "Fraction of ray length where hit has occured (0-1)", "param_type": "Number"}, {"param_name": "obj_hit", "param_desc": "Hit Object 3D", "param_type": "?Object3D"}, {"param_name": "hit_time", "param_desc": "Time the hit happened.", "param_type": "Number"}, {"param_name": "hit_pos", "param_desc": "Hit position in world space", "param_type": "Vec3"}, {"param_name": "hit_norm", "param_desc": "Hit normal in world space", "param_type": "Vec3"}]}, "ManifoldCallback": {"callback_params": [{"param_name": "obj", "param_desc": "Object 3D, or null to denote the global object", "param_type": "?Object3D"}, {"param_name": "id", "param_desc": "Manifold ID", "param_type": "String"}, {"param_name": "pulse", "param_desc": "Manifold pulse value: +1 (all manifold types) or", "param_type": "Number"}, {"param_name": "[param]", "param_desc": "Callback parameter. The user-defined parameter which is", "param_type": "*"}]}}, "modules": [{"module_name": "material", "module_methods": [{"method_name": "inherit_material", "method_params": [{"param_name": "obj_from", "param_desc": "Source Object 3D", "param_type": "Object3D"}, {"param_name": "mat_from_name", "param_desc": "Source material name", "param_type": "String"}, {"param_name": "obj_to", "param_desc": "Destination Object 3D", "param_type": "Object3D"}, {"param_name": "mat_to_name", "param_desc": "Destination material name", "param_type": "String"}]}, {"method_name": "get_materials_names", "method_return": {"return_desc": "Array of materials' names", "return_type": "String[]"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "set_diffuse_color", "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "color", "param_desc": "Color+alpha vector", "param_type": "RGBA"}]}, {"method_name": "get_diffuse_color", "method_return": {"return_desc": "Material diffuse color+alpha", "return_type": "RGBA"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "set_diffuse_intensity", "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "intensity", "param_desc": "Diffuse intencity value", "param_type": "Number"}]}, {"method_name": "get_diffuse_intensity", "method_return": {"return_desc": "Diffuse intencity value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "set_specular_color", "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "color", "param_desc": "Color vector", "param_type": "RGB"}]}, {"method_name": "get_specular_color", "method_return": {"return_desc": "Specular color", "return_type": "RGB"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "set_specular_intensity", "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "intensity", "param_desc": "Specular intensity value", "param_type": "Number"}]}, {"method_name": "get_specular_intensity", "method_return": {"return_desc": "Specular color intensity", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "check_specular_intensity", "method_return": {"return_desc": "Specular intensity presence", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "set_specular_hardness", "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "hardness", "param_desc": "Specular hardness value", "param_type": "Number"}]}, {"method_name": "get_specular_hardness", "method_return": {"return_desc": "Specular color hardness", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "check_specular_hardness", "method_return": {"return_desc": "Specular hardness presence", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "set_emit_factor", "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "emit_factor", "param_desc": "Emit factor value", "param_type": "Number"}]}, {"method_name": "get_emit_factor", "method_return": {"return_desc": "Emit factor value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "set_ambient_factor", "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "ambient_factor", "param_desc": "Ambient factor value", "param_type": "Number"}]}, {"method_name": "get_ambient_factor", "method_return": {"return_desc": "Ambient factor value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "set_diffuse_color_factor", "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "diffuse_color_factor", "param_desc": "Diffuse color factor value", "param_type": "Number"}]}, {"method_name": "get_diffuse_color_factor", "method_return": {"return_desc": "Diffuse color factor value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D ", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "set_alpha_factor", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "alpha_factor", "param_desc": "Alpha factor value", "param_type": "Number"}]}, {"method_name": "get_alpha_factor", "method_return": {"return_desc": "Diffuse alpha factor value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "get_material_extended_params", "method_return": {"return_desc": "Material extended params or null", "return_type": "(MaterialExtParams|null)"}, "method_params": [{"param_name": "obj", "param_desc": "Object", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "get_water_material_params", "method_return": {"return_desc": "Water material params or null", "return_type": "(WaterMaterialParams|null)"}, "method_params": [{"param_name": "obj", "param_desc": "Object", "param_type": "Object3D"}, {"param_name": "water_mat_name", "param_desc": "Water material name", "param_type": "String"}]}, {"method_name": "set_material_params", "method_params": [{"param_name": "obj", "param_desc": "Object", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "mat_params", "param_desc": "Material params", "param_type": "MaterialExtParams"}]}, {"method_name": "set_water_material_params", "method_params": [{"param_name": "obj", "param_desc": "Object", "param_type": "Object3D"}, {"param_name": "water_mat_name", "param_desc": " Water material name", "param_type": "String"}, {"param_name": "water_mat_params", "param_desc": "Water material params", "param_type": "WaterMaterialParams"}]}]}, {"module_name": "tsr", "module_methods": [{"method_name": "create", "method_return": {"return_desc": "New TSR vector", "return_type": "TSR"}}, {"method_name": "from_values", "method_return": {"return_desc": "New TSR vector", "return_type": "TSR"}, "method_params": [{"param_name": "x", "param_desc": "X translation.", "param_type": "Number"}, {"param_name": "y", "param_desc": "Y translation.", "param_type": "Number"}, {"param_name": "z", "param_desc": "Z translation.", "param_type": "Number"}, {"param_name": "s", "param_desc": "Scale.", "param_type": "Number"}, {"param_name": "qx", "param_desc": "X quaternion rotation.", "param_type": "Number"}, {"param_name": "qy", "param_desc": "Y quaternion rotation.", "param_type": "Number"}, {"param_name": "qz", "param_desc": "Z quaternion rotation.", "param_type": "Number"}, {"param_name": "qw", "param_desc": "W quaternion rotation.", "param_type": "Number"}]}, {"method_name": "copy", "method_params": [{"param_name": "tsr", "param_desc": "Source TSR vector", "param_type": "TSR"}, {"param_name": "tsr2", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "identity", "method_params": [{"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}]}, {"method_name": "create_sep", "method_return": {"return_desc": "dest Destination TSR vector", "return_type": "TSR"}, "method_params": [{"param_name": "trans", "param_desc": "Translation vector", "param_type": "Vec3"}, {"param_name": "scale", "param_desc": "Scale", "param_type": "Number"}, {"param_name": "quat", "param_desc": "Rotation quaternion", "param_type": "Quat"}, {"param_name": "[dest]", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "set_sep", "method_params": [{"param_name": "trans", "param_desc": "Translation vector", "param_type": "Vec3"}, {"param_name": "scale", "param_desc": "Scale", "param_type": "Number"}, {"param_name": "quat", "param_desc": "Rotation quaternion", "param_type": "Quat"}, {"param_name": "dest", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "set_trans", "method_params": [{"param_name": "trans", "param_desc": "Translation vector", "param_type": "Vec3"}, {"param_name": "dest", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "set_scale", "method_params": [{"param_name": "scale", "param_desc": "Scale", "param_type": "Number"}, {"param_name": "dest", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "set_transcale", "method_params": [{"param_name": "transcale", "param_desc": "Translation+Scale vector", "param_type": "vec4"}, {"param_name": "dest", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "set_quat", "method_params": [{"param_name": "quat", "param_desc": "Rotation quaternion", "param_type": "Quat"}, {"param_name": "dest", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "get_trans_view", "method_return": {"return_desc": "Translation part of TSR", "return_type": "Vec3"}, "method_params": [{"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}]}, {"method_name": "get_scale", "method_return": {"return_desc": "Scale", "return_type": "Number"}}, {"method_name": "get_quat_view", "method_return": {"return_desc": "Quaternion part of TSR", "return_type": "Quat"}}, {"method_name": "invert", "method_return": {"return_desc": "Destination TSR vector", "return_type": "TSR"}, "method_params": [{"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}, {"param_name": "dest", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "to_mat4", "method_return": {"return_desc": "Destination matrix.", "return_type": "Mat4"}, "method_params": [{"param_name": "tsr", "param_desc": "TSR vector.", "param_type": "TSR"}, {"param_name": "[dest=mat4.create()]", "param_desc": "Destination matrix.", "param_type": "?Mat4"}]}, {"method_name": "from_mat4", "method_return": {"return_desc": "Destination TSR vector.", "return_type": "TSR"}, "method_params": [{"param_name": "mat", "param_desc": "Matrix.", "param_type": "Mat4"}, {"param_name": "dest", "param_desc": "Destination TSR vector.", "param_type": "TSR"}]}, {"method_name": "multiply", "method_return": {"return_desc": "Destination TSR vector", "return_type": "TSR"}, "method_params": [{"param_name": "tsr", "param_desc": "First TSR vector", "param_type": "TSR"}, {"param_name": "tsr2", "param_desc": "Second TSR vector", "param_type": "TSR"}, {"param_name": "dest", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "transform_vec3", "method_params": [{"param_name": "trans", "param_desc": "Vector to transform", "param_type": "Vec3"}, {"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}, {"param_name": "dest", "param_desc": "Destination vector", "param_type": "Vec3"}]}, {"method_name": "transform_vec3_inv", "method_params": [{"param_name": "trans", "param_desc": "Vector to transform", "param_type": "Vec3"}, {"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}, {"param_name": "dest", "param_desc": "Destination vector", "param_type": "Vec3"}]}, {"method_name": "transform_vectors", "method_return": {"return_desc": "Destination array of vectors", "return_type": "Float32Array"}, "method_params": [{"param_name": "vectors", "param_desc": "Array of vectors to transform", "param_type": "Float32Array"}, {"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}, {"param_name": "new_vectors", "param_desc": "Destination array of vectors", "param_type": "Float32Array"}, {"param_name": "[dest_offset=0]", "param_desc": "Offset in new_vectors array", "param_type": "Number"}]}, {"method_name": "transform_dir_vectors", "method_return": {"return_desc": "Destination array of vectors", "return_type": "Float32Array"}, "method_params": [{"param_name": "vectors", "param_desc": "Array of vectors to transform", "param_type": "Float32Array"}, {"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}, {"param_name": "new_vectors", "param_desc": "Destination array of vectors", "param_type": "Float32Array"}, {"param_name": "[dest_offset=0]", "param_desc": "Offset in new_vectors array", "param_type": "Number"}]}, {"method_name": "transform_dir_vec3", "method_params": [{"param_name": "trans", "param_desc": "Vector to transform", "param_type": "Vec3"}, {"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}, {"param_name": "dest", "param_desc": "Destination vector", "param_type": "Vec3"}]}, {"method_name": "transform_tangents", "method_return": {"return_desc": "Destination array of vectors", "return_type": "Float32Array"}, "method_params": [{"param_name": "vectors", "param_desc": "Array of vectors to transform", "param_type": "Float32Array"}, {"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}, {"param_name": "new_vectors", "param_desc": "Destination array of vectors", "param_type": "Float32Array"}, {"param_name": "[dest_offset=0]", "param_desc": "Offset in new_vectors array", "param_type": "Number"}]}, {"method_name": "translate", "method_return": {"return_desc": "Destination TSR vector", "return_type": "TSR"}, "method_params": [{"param_name": "tsr", "param_desc": "TSR vector", "param_type": "TSR"}, {"param_name": "trans", "param_desc": "Translation vector", "param_type": "Vec3"}, {"param_name": "dest", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}, {"method_name": "interpolate", "method_return": {"return_desc": "Destination TSR vector", "return_type": "TSR"}, "method_params": [{"param_name": "tsr", "param_desc": "First TSR vector", "param_type": "TSR"}, {"param_name": "tsr2", "param_desc": "Second TSR vector", "param_type": "TSR"}, {"param_name": "factor", "param_desc": "Interpolation factor", "param_type": "Number"}, {"param_name": "dest", "param_desc": "Destination TSR vector", "param_type": "TSR"}]}]}, {"module_name": "main", "module_methods": [{"method_name": "init", "method_return": {"return_desc": "WebGL context or null", "return_type": "WebGLRenderingContext|Null"}, "method_params": [{"param_name": "elem_canvas_webgl", "param_desc": "Canvas element for WebGL", "param_type": "HTMLCanvasElement"}, {"param_name": "[elem_canvas_hud]", "param_desc": "Canvas element for HUD", "param_type": "HTMLCanvasElement"}]}, {"method_name": "set_check_gl_errors"}, {"method_name": "resize", "method_params": [{"param_name": "width", "param_desc": "New canvas width", "param_type": "Number"}, {"param_name": "height", "param_desc": "New canvas height", "param_type": "Number"}, {"param_name": "[update_canvas_css=true]", "param_desc": "Change canvas CSS width/height", "param_type": "Boolean"}]}, {"method_name": "set_fps_callback", "method_params": [{"param_name": "fps_cb", "param_desc": "FPS callback", "param_type": "FPSCallback"}]}, {"method_name": "clear_fps_callback"}, {"method_name": "set_render_callback", "method_params": [{"param_name": "callback", "param_desc": "Render callback", "param_type": "RenderCallback"}]}, {"method_name": "clear_render_callback"}, {"method_name": "global_timeline", "method_return": {"return_desc": "Floating-point number of seconds elapsed since the engine start-up", "return_type": "Number"}, "depricated": {"is_depricated": true, "desc": "Use time.get_timeline() instead"}}, {"method_name": "redraw", "depricated": {"is_depricated": true, "desc": "Never required"}}, {"method_name": "pause"}, {"method_name": "resume"}, {"method_name": "is_paused", "method_return": {"return_desc": "Paused flag", "return_type": "Boolean"}}, {"method_name": "reset"}, {"method_name": "get_canvas_elem", "method_return": {"return_desc": "Canvas element", "return_type": "HTMLCanvasElement"}, "depricated": {"is_depricated": true, "desc": "Use container.get_canvas() instead"}}, {"method_name": "append_loop_cb", "method_params": [{"param_name": "callback", "param_desc": "Callback", "param_type": "LoopCallback"}]}, {"method_name": "remove_loop_cb", "method_params": [{"param_name": "callback", "param_desc": "Callback", "param_type": "LoopCallback"}]}]}, {"module_name": "version", "module_methods": [{"method_name": "version", "method_return": {"return_desc": "Version: [yy, mm]", "return_type": "Array"}}, {"method_name": "version_str", "method_return": {"return_desc": "Version string", "return_type": "String"}}, {"method_name": "type", "method_return": {"return_desc": "Release type", "return_type": "String"}}, {"method_name": "date", "method_return": {"return_desc": "Date", "return_type": "Date"}}, {"method_name": "date_str", "method_return": {"return_desc": "Date string in the format: \"dd.mm.yyyy hh.mm.ss\"", "return_type": "String"}}]}, {"module_name": "shaders", "module_methods": [{"method_name": "report_repeatful_compilation"}, {"method_name": "get_compiled"}]}, {"module_name": "time", "module_methods": [{"method_name": "set_timeout", "method_return": {"return_desc": "Timeout ID", "return_type": "Number"}, "method_params": [{"param_name": "callback", "param_desc": "Timeout callback", "param_type": "timeout_callback"}, {"param_name": "time", "param_desc": "Timeout", "param_type": "Number"}]}, {"method_name": "clear_timeout", "method_params": [{"param_name": "id", "param_desc": "Timeout ID", "param_type": "Number"}]}, {"method_name": "get_timeline", "method_return": {"return_desc": "Timeline", "return_type": "Number"}}, {"method_name": "animate", "method_params": [{"param_name": "from", "param_desc": "Value to animate from ", "param_type": "Number"}, {"param_name": "to", "param_desc": "Value to animate to", "param_type": "Number"}, {"param_name": "timeout", "param_desc": "Period of time to animate the value", "param_type": "Number"}, {"param_name": "anim_cb", "param_desc": "Animation callback", "param_type": "anim_callback"}]}]}, {"module_const": [{"const_type": "CharacterMoveType", "const_name": "CM_WALK"}, {"const_type": "CharacterMoveType", "const_name": "CM_RUN"}, {"const_type": "CharacterMoveType", "const_name": "CM_CLIMB"}, {"const_type": "CharacterMoveType", "const_name": "CM_FLY"}], "module_name": "physics", "module_methods": [{"method_name": "enable_simulation", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "disable_simulation", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "has_physics", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "has_simulated_physics", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "has_dynamic_physics", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "set_gravity", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "gravity", "param_desc": "Positive object gravity", "param_type": "Number"}]}, {"method_name": "set_damping", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "damping", "param_desc": "Linear damping", "param_type": "Number"}, {"param_name": "rotation_damping", "param_desc": "Angular damping", "param_type": "Number"}]}, {"method_name": "reset_damping", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "set_transform", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "trans", "param_desc": "Translation vector", "param_type": "Vec3"}, {"param_name": "quat", "param_desc": "Rotation quaternion", "param_type": "Quat"}]}, {"method_name": "sync_transform", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "apply_velocity", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "vx_local", "param_desc": "Vx local space velocity", "param_type": "Number"}, {"param_name": "vy_local", "param_desc": "Vy local space velocity", "param_type": "Number"}, {"param_name": "vz_local", "param_desc": "Vz local space velocity ", "param_type": "Number"}]}, {"method_name": "apply_velocity_world", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "vx", "param_desc": "Vx world space velocity", "param_type": "Number"}, {"param_name": "vy", "param_desc": "Vy world space velocity", "param_type": "Number"}, {"param_name": "vz", "param_desc": "Vz world space velocity", "param_type": "Number"}]}, {"method_name": "apply_force", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "fx_local", "param_desc": "Fx force in the local space", "param_type": "Number"}, {"param_name": "fy_local", "param_desc": "Fy force in the local space", "param_type": "Number"}, {"param_name": "fz_local", "param_desc": "Fz force in the local space ", "param_type": "Number"}]}, {"method_name": "apply_torque", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "tx_local", "param_desc": "Tx torque", "param_type": "Number"}, {"param_name": "ty_local", "param_desc": "Ty torque", "param_type": "Number"}, {"param_name": "tz_local", "param_desc": "Tz torque", "param_type": "Number"}]}, {"method_name": "vehicle_throttle", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "engine_force", "param_desc": "Engine force (-1..1)", "param_type": "Number"}]}, {"method_name": "vehicle_throttle_inc", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "engine_force", "param_desc": "Engine force increment (0..1)", "param_type": "Number"}, {"param_name": "dir", "param_desc": "Throttling direction -1,0,1", "param_type": "Number"}]}, {"method_name": "vehicle_steer", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "steering_value", "param_desc": "Steering value (-1..1)", "param_type": "Number"}]}, {"method_name": "vehicle_steer_inc", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "steering_value", "param_desc": "Steering value increment (0..1)", "param_type": "Number"}, {"param_name": "dir", "param_desc": "Steering direction -1,0,1", "param_type": "Number"}]}, {"method_name": "vehicle_brake", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "brake_force", "param_desc": "Brake force (0..1)", "param_type": "Number"}]}, {"method_name": "vehicle_brake_inc", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "brake_force", "param_desc": "Brake force increment (-1..1)", "param_type": "Number"}]}, {"method_name": "is_vehicle_chassis", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "is_vehicle_hull", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_vehicle_name", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_vehicle_throttle", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_vehicle_steering", "method_return": {"return_desc": "Steering value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_vehicle_brake", "method_return": {"return_desc": "Brake value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_vehicle_speed", "method_return": {"return_desc": "Vehicle speed", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "is_character", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "set_character_move_dir", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "forw", "param_desc": "Apply forward speed", "param_type": "Number"}, {"param_name": "side", "param_desc": "Apply side speed", "param_type": "Number"}]}, {"method_name": "set_character_move_type", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "type", "param_desc": "Character moving type (one of CM_*).", "param_type": "Number"}]}, {"method_name": "set_character_walk_velocity", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "velocity", "param_desc": "Walking velocity", "param_type": "Number"}]}, {"method_name": "set_character_run_velocity", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "velocity", "param_desc": "Running velocity", "param_type": "Number"}]}, {"method_name": "set_character_fly_velocity", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "velocity", "param_desc": "Flying velocity", "param_type": "Number"}]}, {"method_name": "character_jump", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "character_rotation_inc", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "h_angle", "param_desc": "Angle in horizontal plane", "param_type": "Number"}, {"param_name": "v_angle", "param_desc": "Angle in vertical plane", "param_type": "Number"}]}, {"method_name": "set_character_rotation_quat", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "quat", "param_desc": "Rotation quaternion", "param_type": "Quat"}]}, {"method_name": "set_character_rotation", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "angle_h", "param_desc": "Angle in horizontal plane", "param_type": "Number"}, {"param_name": "angle_v", "param_desc": "Angle in vertical plane", "param_type": "Number"}]}, {"method_name": "set_character_rotation_v", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "angle", "param_desc": "Angle in vertical plane", "param_type": "Number"}]}, {"method_name": "set_character_rotation_h", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "angle", "param_desc": "Angle in horizontal plane", "param_type": "Number"}]}, {"method_name": "append_collision_test", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "collision_id", "param_desc": "Collision ID", "param_type": "String"}, {"param_name": "callback", "param_desc": "Collision callback", "param_type": "CollisionCallback"}, {"param_name": "[calc_pos_norm=false]", "param_desc": "Pass collision point/normal/distance in callback", "param_type": "Boolean"}]}, {"method_name": "remove_collision_test", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "collision_id", "param_desc": "Collision ID", "param_type": "String"}]}, {"method_name": "apply_collision_impulse_test", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "callback", "param_desc": "Callision impulse test callback.", "param_type": "CollisionImpulseCallback"}]}, {"method_name": "clear_collision_impulse_test", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "append_ray_test", "method_return": {"return_desc": "Ray Test ID", "return_type": "Number"}, "method_params": [{"param_name": "obj_src", "param_desc": "Source object, pass a non-null value to perform ray casting", "param_type": "?Object3D"}, {"param_name": "from", "param_desc": "From vector", "param_type": "Vec3"}, {"param_name": "to", "param_desc": "To vector", "param_type": "Vec3"}, {"param_name": "collision_id", "param_desc": "Collision ID, \"ANY\" for any collision ID", "param_type": "String"}, {"param_name": "callback", "param_desc": "Ray Test callback", "param_type": "RayTestCallback"}, {"param_name": "[autoremove=false]", "param_desc": "Automatically remove test after ray casting.", "param_type": "Boolean"}]}, {"method_name": "append_ray_test_ext", "method_return": {"return_desc": "Ray Test ID", "return_type": "Number"}, "method_params": [{"param_name": "obj_src", "param_desc": "Source object, pass a non-null value to perform ray casting", "param_type": "?Object3D"}, {"param_name": "from", "param_desc": "From vector", "param_type": "Vec3"}, {"param_name": "to", "param_desc": "To vector", "param_type": "Vec3"}, {"param_name": "collision_id", "param_desc": "Collision ID, \"ANY\" for any collision ID", "param_type": "String"}, {"param_name": "callback", "param_desc": "Ray Test callback", "param_type": "RayTestCallback|RayTestCallbackPosNorm"}, {"param_name": "[autoremove=false]", "param_desc": "Automatically remove test after ray casting.", "param_type": "Boolean"}, {"param_name": "[calc_all_hits=false]", "param_desc": "Test for all possible objects along the ray or", "param_type": "Boolean"}, {"param_name": "[calc_pos_norm=false]", "param_desc": "Calculate and return hit point's position/normal in", "param_type": "Boolean"}, {"param_name": "[ign_src_rot=false]", "param_desc": "Ignore rotation of source object", "param_type": "Boolean"}]}, {"method_name": "remove_ray_test", "method_params": [{"param_name": "id", "param_desc": "Ray Test ID", "param_type": "Number"}]}, {"method_name": "change_ray_test_from_to", "method_params": [{"param_name": "id", "param_desc": "Ray Test ID", "param_type": "Number"}, {"param_name": "from", "param_desc": "New from vector", "param_type": "Vec3"}, {"param_name": "to", "param_desc": "New to vector", "param_type": "Vec3"}]}, {"method_name": "apply_constraint", "method_params": [{"param_name": "pivot_type", "param_desc": "Pivot type", "param_type": "String"}, {"param_name": "obj_a", "param_desc": "Object 3D A", "param_type": "Object3D"}, {"param_name": "trans_a", "param_desc": "Translation of pivot frame relative to A", "param_type": "Vec3"}, {"param_name": "quat_a", "param_desc": "Rotation of pivot frame relative to A", "param_type": "Quat"}, {"param_name": "obj_b", "param_desc": "Object 3D B", "param_type": "Object3D"}, {"param_name": "trans_b", "param_desc": "Translation of pivot frame relative to B", "param_type": "Vec3"}, {"param_name": "quat_b", "param_desc": "Rotation of pivot frame relative to B", "param_type": "Quat"}, {"param_name": "limits", "param_desc": "Object containting constraint limits", "param_type": "ConstraintLimits"}, {"param_name": "[stiffness=null]", "param_desc": "6-dimensional vector with constraint stiffness", "param_type": "Float32Array"}, {"param_name": "[damping=null]", "param_desc": "6-dimensional vector with constraint damping", "param_type": "Float32Array"}]}, {"method_name": "remove_constraint", "method_params": [{"param_name": "obj_a", "param_desc": "Object A.", "param_type": "Object3D"}]}, {"method_name": "pull_to_constraint_pivot", "method_params": [{"param_name": "obj_a", "param_desc": "Object 3D A", "param_type": "Object3D"}, {"param_name": "trans_a", "param_desc": "Translation of pivot frame relative to A", "param_type": "Vec3"}, {"param_name": "quat_a", "param_desc": "Rotation of pivot frame relative to A", "param_type": "Quat"}, {"param_name": "obj_b", "param_desc": "Object 3D B", "param_type": "Object3D"}, {"param_name": "trans_b", "param_desc": "Translation of pivot frame relative to B", "param_type": "Vec3"}, {"param_name": "quat_b", "param_desc": "Rotation of pivot frame relative to B", "param_type": "Quat"}]}]}, {"module_const": [{"const_type": "Space", "const_name": "SPACE_LOCAL"}, {"const_type": "Space", "const_name": "SPACE_WORLD"}], "module_name": "transform", "module_methods": [{"method_name": "set_translation", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "x", "param_desc": "X coord", "param_type": "Number"}, {"param_name": "y", "param_desc": "Y coord", "param_type": "Number"}, {"param_name": "z", "param_desc": "Z coord", "param_type": "Number"}]}, {"method_name": "set_translation_v", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "trans", "param_desc": "Translation vector", "param_type": "Vec3"}]}, {"method_name": "set_translation_rel", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "x", "param_desc": "X coord", "param_type": "Number"}, {"param_name": "y", "param_desc": "Y coord", "param_type": "Number"}, {"param_name": "z", "param_desc": "Z coord", "param_type": "Number"}, {"param_name": "obj_parent", "param_desc": "Parent object.", "param_type": "Object3D"}]}, {"method_name": "get_translation", "method_return": {"return_desc": "Destination vector", "return_type": "Vec3"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[dest]", "param_desc": "Destination vector", "param_type": "Vec3"}]}, {"method_name": "set_rotation", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "x", "param_desc": "X part of quaternion", "param_type": "Number"}, {"param_name": "y", "param_desc": "Y part of quaternion", "param_type": "Number"}, {"param_name": "z", "param_desc": "Z part of quaternion", "param_type": "Number"}, {"param_name": "w", "param_desc": "W part of quaternion", "param_type": "Number"}]}, {"method_name": "set_rotation_quat", "depricated": {"is_depricated": true, "desc": "Use set_rotation() instead"}}, {"method_name": "set_rotation_v", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "quat", "param_desc": "Quaternion vector", "param_type": "Quat"}]}, {"method_name": "set_rotation_quat_v", "depricated": {"is_depricated": true, "desc": "Use set_rotation_v() instead"}}, {"method_name": "get_rotation", "method_return": {"return_desc": "Destination vector", "return_type": "Quat"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[opt_dest]", "param_desc": "Destination vector", "param_type": "Quat"}]}, {"method_name": "get_rotation_quat", "depricated": {"is_depricated": true, "desc": "Use get_rotation() instead"}}, {"method_name": "set_rotation_euler", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "x", "param_desc": "Angle X", "param_type": "Number"}, {"param_name": "y", "param_desc": "Angle Y", "param_type": "Number"}, {"param_name": "z", "param_desc": "Angle Z", "param_type": "Number"}]}, {"method_name": "set_rotation_euler_v", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "euler", "param_desc": "Vector with euler angles", "param_type": "Vec3"}]}, {"method_name": "set_scale", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "scale", "param_desc": "Object scale", "param_type": "Number"}]}, {"method_name": "get_scale", "method_return": {"return_desc": "scale", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "empty_reset_transform", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_object_size", "method_return": {"return_desc": "Object size", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_object_center", "method_return": {"return_desc": "Destination vector", "return_type": "Vec3"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "calc_bs_center", "param_desc": "Use the object's bounding sphere to", "param_type": "Boolean"}, {"param_name": "[dest]", "param_desc": "Destination vector", "param_type": "Vec3"}]}, {"method_name": "move_local", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "x", "param_desc": "DeltaX coord", "param_type": "Number"}, {"param_name": "y", "param_desc": "DeltaY coord", "param_type": "Number"}, {"param_name": "z", "param_desc": "DeltaZ coord", "param_type": "Number"}]}, {"method_name": "get_object_bounding_box", "method_return": {"return_desc": "Bounding box", "return_type": "BoundingBox"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_tsr", "method_return": {"return_desc": "Destination vector.", "return_type": "TSR"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[dest]", "param_desc": "Destination vector.", "param_type": "TSR"}]}, {"method_name": "set_tsr", "method_return": {"return_desc": "Distance", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "tsr", "param_desc": "vector", "param_type": "TSR"}]}]}, {"module_name": "geometry", "module_methods": [{"method_name": "extract_vertex_array", "method_return": {"return_desc": "Vertex array", "return_type": "Float32Array"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "attrib_name", "param_desc": "Attribute name (a_position, a_normal, a_tangent)", "param_type": "String"}]}, {"method_name": "extract_index_array", "method_return": {"return_desc": "Array of triangle indices", "return_type": "Uint16Array|Uint32Array"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}]}, {"method_name": "update_vertex_array", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "attrib_name", "param_desc": "Attribute name (a_position, a_normal, a_tangent)", "param_type": "String"}, {"param_name": "array", "param_desc": "The new array", "param_type": "Float32Array"}]}, {"method_name": "override_geometry", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "mat_name", "param_desc": "Material name", "param_type": "String"}, {"param_name": "ibo_array", "param_desc": "Array of triangle indices", "param_type": "Uint16Array|Uint32Array"}, {"param_name": "positions_array", "param_desc": "New vertex positions array", "param_type": "Float32Array"}, {"param_name": "smooth_normals", "param_desc": "Enable normals smoothing", "param_type": "Boolean"}]}, {"method_name": "set_shape_key_value", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "key_name", "param_desc": "Shape key name", "param_type": "String"}, {"param_name": "value", "param_desc": "Shape key value", "param_type": "Number"}]}, {"method_name": "check_shape_keys", "method_return": {"return_desc": "Checking result.", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_shape_keys_names", "method_return": {"return_desc": "Array of animation names", "return_type": "String[]"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_shape_key_value", "method_return": {"return_desc": "value Shape key value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "key_name", "param_desc": "Shape key name", "param_type": "String"}]}]}, {"module_name": "nla", "module_methods": [{"method_name": "set_nla_frame", "method_params": [{"param_name": "frame", "param_desc": "NLA animation frame", "param_type": "Number"}]}, {"method_name": "get_frame", "method_return": {"return_desc": "NLA animation current frame.", "return_type": "Number"}}, {"method_name": "stop"}, {"method_name": "play", "method_params": [{"param_name": "[callback=null]", "param_desc": "Nla finish callback.", "param_type": "?NlaFinishCallback"}]}, {"method_name": "is_play", "method_return": {"return_desc": "Check result.", "return_type": "Boolean"}}, {"method_name": "get_frame_start", "method_return": {"return_desc": "Start frame.", "return_type": "Number"}}, {"method_name": "get_frame_end", "method_return": {"return_desc": "End frame.", "return_type": "Number"}}, {"method_name": "check_nla", "method_return": {"return_desc": "Check result.", "return_type": "Boolean"}}, {"method_name": "check_nla_scripts", "method_return": {"return_desc": "Check result.", "return_type": "Boolean"}}, {"method_name": "set_range", "method_params": [{"param_name": "start_frame", "param_desc": "Start NLA animation frame", "param_type": "Number"}, {"param_name": "end_frame", "param_desc": "End NLA animation frame", "param_type": "Number"}]}, {"method_name": "reset_range"}, {"method_name": "set_cyclic", "method_params": [{"param_name": "is_cyclic", "param_desc": "Cyclic behavior.", "param_type": "Boolean"}]}, {"method_name": "clear_callback"}]}, {"module_name": "lights", "module_methods": [{"method_name": "get_lamps", "method_return": {"return_desc": "Array with lamp objects.", "return_type": "Object3D[]"}, "method_params": [{"param_name": "[lamps_type]", "param_desc": "Lamps type (\"POINT\", \"SPOT\", \"SUN\", \"HEMI\")", "param_type": "String"}]}, {"method_name": "get_sun_params", "method_return": {"return_desc": "Sun params object", "return_type": "SunParams"}}, {"method_name": "set_sun_params", "method_params": [{"param_name": "sun_params", "param_desc": "sun parameters", "param_type": "SunParams"}]}, {"method_name": "set_day_time", "method_params": [{"param_name": "time", "param_desc": "new time (0.0...24.0)", "param_type": "Number"}]}, {"method_name": "set_date", "method_params": [{"param_name": "date", "param_desc": "new date", "param_type": "Date"}]}, {"method_name": "set_max_sun_angle", "method_params": [{"param_name": "angle", "param_desc": "New angle in degrees (0..90)", "param_type": "Number"}]}, {"method_name": "get_light_params", "method_return": {"return_desc": "Light params", "return_type": "LightParams"}, "method_params": [{"param_name": "lamp_obj", "param_desc": "Lamp object", "param_type": "Object3D"}]}, {"method_name": "get_light_type", "method_return": {"return_desc": "Light type", "return_type": "String"}, "method_params": [{"param_name": "lamp_obj", "param_desc": "Lamp object.", "param_type": "Object3D"}]}, {"method_name": "set_light_params", "method_params": [{"param_name": "lamp_obj", "param_desc": "Lamp object.", "param_type": "Object3D"}, {"param_name": "light_params", "param_desc": "Light params", "param_type": "LightParams"}]}]}, {"module_name": "anchors", "module_methods": [{"method_name": "attach_move_cb", "method_params": [{"param_name": "obj", "param_desc": "Anchor object.", "param_type": "Object3D"}, {"param_name": "anchor_move_cb", "param_desc": "Anchor movement callback", "param_type": "AnchorMoveCallback"}]}, {"method_name": "detach_move_cb", "method_params": [{"param_name": "obj", "param_desc": "Anchor object.", "param_type": "Object3D"}]}, {"method_name": "is_anchor", "method_return": {"return_desc": "Check result.", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Anchor object.", "param_type": "Object3D"}]}, {"method_name": "get_element_id", "method_return": {"return_desc": "Element ID.", "return_type": "String"}, "method_params": [{"param_name": "obj", "param_desc": "Anchor object.", "param_type": "Object3D"}]}]}, {"module_name": "debug", "module_methods": [{"method_name": "physics_stats"}, {"method_name": "physics_id"}, {"method_name": "visible_objects"}, {"method_name": "object_info"}, {"method_name": "objects_stat"}, {"method_name": "num_vertices"}, {"method_name": "num_triangles"}, {"method_name": "num_draw_calls"}, {"method_name": "num_shaders"}, {"method_name": "geometry_stats"}, {"method_name": "num_textures"}, {"method_name": "num_render_targets"}, {"method_name": "make_camera_frustum_shot"}, {"method_name": "make_light_frustum_shot"}, {"method_name": "scenegraph_to_dot"}, {"method_name": "controls_info"}, {"method_name": "object_distance"}, {"method_name": "msg"}, {"method_name": "fbmsg"}, {"method_name": "print_telemetry"}, {"method_name": "plot_telemetry"}, {"method_name": "fbres"}, {"method_name": "assert_constants"}, {"method_name": "mute_music"}, {"method_name": "check_finite"}, {"method_name": "set_debug_params"}]}, {"module_const": [{"const_type": "QualityProfile", "const_name": "P_LOW"}, {"const_type": "QualityProfile", "const_name": "P_HIGH"}, {"const_type": "QualityProfile", "const_name": "P_ULTRA"}, {"const_type": "QualityProfile", "const_name": "P_CUSTOM"}], "module_name": "config", "module_methods": [{"method_name": "set", "method_params": [{"param_name": "prop", "param_desc": "Property name", "param_type": "String"}, {"param_name": "value", "param_desc": "New property value", "param_type": "*"}]}, {"method_name": "get", "method_return": {"return_desc": "Value of property", "return_type": "*"}, "method_params": [{"param_name": "prop", "param_desc": "Property name", "param_type": "String"}]}, {"method_name": "reset"}, {"method_name": "get_std_assets_path", "method_return": {"return_desc": "Path to assets", "return_type": "String"}}]}, {"module_name": "data", "module_methods": [{"method_name": "load", "method_return": {"return_desc": "ID of loaded data.", "return_type": "Number"}, "method_params": [{"param_name": "path", "param_desc": "Path to JSON file", "param_type": "String"}, {"param_name": "[loaded_cb=null]", "param_desc": "Callback to be executed right after load", "param_type": "LoadedCallback"}, {"param_name": "[stageload_cb=null]", "param_desc": "Callback to report about the loading progress", "param_type": "StageloadCallback"}, {"param_name": "[wait_complete_loading=false]", "param_desc": "Wait until all resources are loaded", "param_type": "Boolean"}, {"param_name": "[load_hidden=false]", "param_desc": "Hide loaded and disable physics objects", "param_type": "Boolean"}]}, {"method_name": "unload", "method_params": [{"param_name": "[data_id=0]", "param_desc": "ID of unloaded data. Unload all data if data_id is zero.", "param_type": "Number"}]}, {"method_name": "set_debug_resources_root", "method_params": [{"param_name": "debug_resources_root", "param_desc": "App root directory.", "param_type": "String"}]}, {"method_name": "is_primary_loaded", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}}]}, {"module_name": "sfx", "module_methods": [{"method_name": "play", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[when=0]", "param_desc": "Delay after exec in seconds", "param_type": "Number"}, {"param_name": "[duration=0]", "param_desc": "Duration of the speaker's playback cycle (in", "param_type": "Number"}]}, {"method_name": "play_def", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "is_play", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "speaker_play", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[duration=0]", "param_desc": "Duration in float seconds", "param_type": "Number"}, {"param_name": "[playrate=1]", "param_desc": "Playback rate", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use play() or play_def() instead"}}, {"method_name": "speaker_stop", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}], "depricated": {"is_depricated": true, "desc": "Use stop() instead"}}, {"method_name": "stop", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "pause", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "resume", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "speaker_playback_rate", "depricated": {"is_depricated": true, "desc": "Use playrate() instead"}}, {"method_name": "playrate", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "playrate", "param_desc": "Playback rate (1.0 - normal speed).", "param_type": "Number"}]}, {"method_name": "playrate", "method_return": {"return_desc": "Playback rate", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "cyclic", "method_params": [{"param_name": "obj", "param_desc": "Speaker object.", "param_type": "Object3D"}, {"param_name": "cyclic", "param_desc": "New cyclic flag value.", "param_type": "Boolean"}]}, {"method_name": "is_cyclic", "method_return": {"return_desc": "Cyclic flag value.", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Speaker object.", "param_type": "Object3D"}]}, {"method_name": "listener_reset_speed", "method_params": [{"param_name": "speed", "param_desc": "The listener new speed", "param_type": "Number"}, {"param_name": "[dir=null]", "param_desc": "The listener new direction", "param_type": "?Float32Array"}]}, {"method_name": "speaker_reset_speed", "method_params": [{"param_name": "obj", "param_desc": "Speaker object.", "param_type": "Object3D"}, {"param_name": "speed", "param_desc": "The speaker's new speed", "param_type": "Number"}, {"param_name": "[dir=null]", "param_desc": "The speaker's new direction", "param_type": "?Float32Array"}]}, {"method_name": "get_volume", "method_return": {"return_desc": "Volume (0..1)", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D or null for MASTER volume", "param_type": "?Object3D"}]}, {"method_name": "set_volume", "method_params": [{"param_name": "obj", "param_desc": "Object 3D or null for MASTER volume", "param_type": "?Object3D"}, {"param_name": "volume", "param_desc": "Volume (0..1)", "param_type": "Number"}]}, {"method_name": "mute", "method_params": [{"param_name": "obj", "param_desc": "Speaker object or null for all of them", "param_type": "?Object3D"}, {"param_name": "muted", "param_desc": "New state", "param_type": "Boolean"}]}, {"method_name": "is_muted", "method_return": {"return_desc": "Speaker object array", "return_type": "Array"}, "method_params": [{"param_name": "obj", "param_desc": "Speaker object or null for all of them.", "param_type": "?Object3D"}]}, {"method_name": "get_speakers", "depricated": {"is_depricated": true, "desc": "Use get_speaker_objects() instead"}}, {"method_name": "check_active_speakers", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}}, {"method_name": "set_compressor_params", "method_params": [{"param_name": "params", "param_desc": "Params object", "param_type": "CompressorParams"}]}, {"method_name": "get_compressor_params", "method_return": {"return_desc": "Params object", "return_type": "CompressorParams"}}, {"method_name": "duck", "method_params": [{"param_name": "obj", "param_desc": "Object 3D or null for MASTER", "param_type": "?Object3D"}, {"param_name": "value", "param_desc": "Duck amount.", "param_type": "Number"}, {"param_name": "time", "param_desc": "Time to change volume.", "param_type": "Number"}]}, {"method_name": "unduck", "method_params": [{"param_name": "obj", "param_desc": "Object 3D or null for MASTER", "param_type": "?Object3D"}]}, {"method_name": "apply_playlist", "method_params": [{"param_name": "objs", "param_desc": "Array of objects.", "param_type": "Object3D[]"}, {"param_name": "delay", "param_desc": "Number of seconds between tracks", "param_type": "Number"}, {"param_name": "random", "param_desc": "Randomize playback sequence", "param_type": "Boolean"}]}, {"method_name": "clear_playlist"}, {"method_name": "detect_audio_container", "method_return": {"return_desc": "Supported containter or \"\"", "return_type": "String"}, "method_params": [{"param_name": "[hint=\"ogg\"]", "param_desc": "Required container", "param_type": "String"}]}, {"method_name": "detect_video_container", "method_return": {"return_desc": "Supported containter or \"\"", "return_type": "String"}, "method_params": [{"param_name": "[hint=\"webm\"]", "param_desc": "Required container", "param_type": "String"}]}, {"method_name": "set_positional_params", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "params", "param_desc": "Params object", "param_type": "PositionalParams"}]}, {"method_name": "get_positional_params", "method_return": {"return_desc": "Params object", "return_type": "PositionalParams"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "set_filter_params", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "params", "param_desc": "Params object", "param_type": "FilterParams"}]}, {"method_name": "get_filter_params", "method_return": {"return_desc": "Params object", "return_type": "FilterParams"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_filter_freq_response", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "freq_arr", "param_desc": "Input array with frequencies.", "param_type": "Float32Array"}, {"param_name": "mag_arr", "param_desc": "Ouput array with filter response magnitudes.", "param_type": "Float32Array"}, {"param_name": "phase_arr", "param_desc": "Output array with filter response phases.", "param_type": "Float32Array"}]}, {"method_name": "get_volume", "method_return": {"return_desc": "Duration", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Speaker object.", "param_type": "?Object3D"}]}]}, {"module_name": "hud", "module_methods": [{"method_name": "draw_mixer_strip"}, {"method_name": "plot_array", "method_params": [{"param_name": "header", "param_desc": "Plot header", "param_type": "String"}, {"param_name": "slot", "param_desc": "Slot number", "param_type": "Number"}, {"param_name": "arr", "param_desc": "Array", "param_type": "Float32Array"}, {"param_name": "arg_min", "param_desc": "Minimum plot argument value", "param_type": "Number"}, {"param_name": "arg_max", "param_desc": "Maximum plot argument value", "param_type": "Number"}, {"param_name": "val_min", "param_desc": "Minimum plot value", "param_type": "Number"}, {"param_name": "val_max", "param_desc": "Maximum plot value", "param_type": "Number"}]}]}, {"module_name": "constraints", "module_methods": [{"method_name": "append_stiff", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "target", "param_desc": "Object 3D or [Armature object, Bone Name]", "param_type": "(Object3D|Array)"}, {"param_name": "offset", "param_desc": "Offset, in the parent's local space.", "param_type": "Vec3"}, {"param_name": "[rotation_offset=null]", "param_desc": "Rotation offset, in the", "param_type": "Quat"}, {"param_name": "[scale_offset=1]", "param_desc": "Scale offset, in the parent's local space.", "param_type": "Number"}]}, {"method_name": "append_semi_stiff", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "target", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "offset", "param_desc": "Offset, in the parent's local space", "param_type": "Vec3"}, {"param_name": "[rotation_offset]", "param_desc": "Initial rotation offset, in the", "param_type": "Quat"}]}, {"method_name": "append_semi_stiff_cam", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "target", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "offset", "param_desc": "Offset, in the parent's local space", "param_type": "Vec3"}, {"param_name": "[rotation_offset]", "param_desc": "Initial rotation offset, in the", "param_type": "Quat"}, {"param_name": "clamp_left", "param_desc": "Left camera rotation limit, in radians", "param_type": "Number"}, {"param_name": "clamp_right", "param_desc": "Right camera rotation limit, in radians", "param_type": "Number"}, {"param_name": "clamp_up", "param_desc": "Upward camera rotation limit, in radians", "param_type": "Number"}, {"param_name": "clamp_down", "param_desc": "Downward camera rotation limit, in radians", "param_type": "Number"}]}, {"method_name": "append_semi_soft_cam", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "target", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "offset", "param_desc": "Offset, in the parent's local space", "param_type": "Vec3"}, {"param_name": "[softness=0.25]", "param_desc": "Camera smoothness ratio", "param_type": "Number"}]}, {"method_name": "append_stiff_trans", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "target", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "offset", "param_desc": "Offset, in the parent's local space", "param_type": "Vec3"}]}, {"method_name": "append_copy_trans", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "target", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "offset", "param_desc": "Offset, in the parent's world space", "param_type": "Vec3"}]}, {"method_name": "append_stiff_trans_rot", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "target", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "offset", "param_desc": "Offset, in the parent's local space", "param_type": "Vec3"}, {"param_name": "[rotation_offset]", "param_desc": "Rotation offset, in", "param_type": "Quat"}]}, {"method_name": "append_track", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "target", "param_desc": "Target object or position vector", "param_type": "(Object3D|Vec3)"}]}, {"method_name": "append_follow", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "target", "param_desc": "Target object or position vector", "param_type": "(Object3D|Vec3)"}, {"param_name": "dist_min", "param_desc": "Minimum distance", "param_type": "Number"}, {"param_name": "dist_max", "param_desc": "Maximum distance", "param_type": "Number"}]}, {"method_name": "append_stiff_viewport", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "camobj", "param_desc": "Camera object.", "param_type": "Object3D"}, {"param_name": "x_rel", "param_desc": "X offset as fraction to camera height.", "param_type": "Number"}, {"param_name": "y_rel", "param_desc": "Y offset as fraction to camera height.", "param_type": "Number"}, {"param_name": "dist", "param_desc": "Distance from the camera", "param_type": "Number"}]}, {"method_name": "remove", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_parent", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}]}, {"module_name": "scenes", "module_methods": [{"method_name": "set_active", "method_params": [{"param_name": "scene_name", "param_desc": "Name of scene", "param_type": "String"}]}, {"method_name": "get_active", "method_return": {"return_desc": "Active scene name", "return_type": "String"}}, {"method_name": "get_scenes", "method_return": {"return_desc": "Array of scene names.", "return_type": "String[]"}}, {"method_name": "get_active_camera", "method_return": {"return_desc": "Camera object.", "return_type": "Object3D"}}, {"method_name": "get_object_by_name", "method_return": {"return_desc": "Object 3D", "return_type": "Object3D"}, "method_params": [{"param_name": "name", "param_desc": "Object name", "param_type": "String"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}]}, {"method_name": "get_object_by_dupli_name", "method_return": {"return_desc": "Object 3D", "return_type": "Object3D"}, "method_params": [{"param_name": "empty_name", "param_desc": "Name of the EMPTY object used to duplicate the object", "param_type": "String"}, {"param_name": "dupli_name", "param_desc": "Name of the duplicated object", "param_type": "String"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}]}, {"method_name": "get_object_by_dupli_name_list", "method_return": {"return_desc": "Object 3D.", "return_type": "Object3D"}, "method_params": [{"param_name": "name_list", "param_desc": "List of the EMPTY and DUPLI object names: [empty_name,empty_name,...,dupli_name].", "param_type": "String[]"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data.", "param_type": "Number"}]}, {"method_name": "get_object_data_id", "method_return": {"return_desc": "data_id Data ID property", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "pick_object", "method_params": [{"param_name": "x", "param_desc": "X Canvas coordinate.", "param_type": "Number"}, {"param_name": "y", "param_desc": "Y Canvas coordinate.", "param_type": "Number"}]}, {"method_name": "outlining_is_enabled", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "value", "param_desc": "Is enabled?", "param_type": "Boolean"}]}, {"method_name": "set_outline_intensity", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "value", "param_desc": "Intensity value", "param_type": "Number"}]}, {"method_name": "get_outline_intensity", "method_return": {"return_desc": "Intensity value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "apply_outline_anim", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "tau", "param_desc": "Outlining duration", "param_type": "Number"}, {"param_name": "T", "param_desc": "Period of outlining", "param_type": "Number"}, {"param_name": "N", "param_desc": "Number of relapses (0 - infinity)", "param_type": "Number"}]}, {"method_name": "apply_outline_anim_def", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "clear_outline_anim", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "set_outline_color", "method_params": [{"param_name": "color", "param_desc": "RGB color vector", "param_type": "RGB"}]}, {"method_name": "get_outline_color", "method_return": {"return_desc": "Destination RGB color vector", "return_type": "RGB"}, "method_params": [{"param_name": "dest", "param_desc": "Destination RGB color vector", "param_type": "?RGB"}]}, {"method_name": "set_glow_intensity", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "value", "param_desc": "Intensity value", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "use set_outline_intensity() instead"}}, {"method_name": "get_glow_intensity", "method_return": {"return_desc": "Intensity value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}], "depricated": {"is_depricated": true, "desc": "use get_outline_intensity() instead"}}, {"method_name": "apply_glow_anim", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "tau", "param_desc": "Glowing duration", "param_type": "Number"}, {"param_name": "T", "param_desc": "Period of glowing", "param_type": "Number"}, {"param_name": "N", "param_desc": "Number of relapses (0 - infinity)", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "use apply_outline_anim() instead"}}, {"method_name": "apply_glow_anim_def", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}], "depricated": {"is_depricated": true, "desc": "use apply_outline_anim_def() instead"}}, {"method_name": "clear_glow_anim", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}], "depricated": {"is_depricated": true, "desc": "use clear_outline_anim() instead"}}, {"method_name": "set_glow_color", "method_params": [{"param_name": "color", "param_desc": "RGB color vector", "param_type": "RGB"}], "depricated": {"is_depricated": true, "desc": "use set_outline_color() instead"}}, {"method_name": "get_glow_color", "method_return": {"return_desc": "Destination RGB color vector.", "return_type": "RGB"}, "method_params": [{"param_name": "dest", "param_desc": "Destination RGB color vector.", "param_type": "?RGB"}], "depricated": {"is_depricated": true, "desc": "use get_outline_color() instead"}}, {"method_name": "get_shadow_params", "method_return": {"return_desc": "Shadow params", "return_type": "ShadowParams"}}, {"method_name": "set_shadow_params", "method_params": [{"param_name": "shadow_params", "param_desc": "Shadow params", "param_type": "ShadowParams"}]}, {"method_name": "get_environment_colors", "method_return": {"return_desc": "Environment colors", "return_type": "Array"}}, {"method_name": "set_environment_colors", "method_params": [{"param_name": "[opt_environment_energy]", "param_desc": "Environment Energy", "param_type": "Number"}, {"param_name": "[opt_horizon_color]", "param_desc": "Horizon color", "param_type": "RGB"}, {"param_name": "[opt_zenith_color]", "param_desc": "Zenith color", "param_type": "RGB"}]}, {"method_name": "get_fog_color_density", "method_return": {"return_desc": "Destnation vector", "return_type": "Vec4"}, "method_params": [{"param_name": "dest", "param_desc": "Destnation vector [C,C,C,D]", "param_type": "Vec4"}]}, {"method_name": "set_fog_color_density", "method_params": [{"param_name": "val", "param_desc": "Color-density vector [C,C,C,D]", "param_type": "Vec4"}]}, {"method_name": "get_ssao_params", "method_return": {"return_desc": "SSAO params", "return_type": "SSAOParams"}}, {"method_name": "set_ssao_params", "method_params": [{"param_name": "ssao_params", "param_desc": "SSAO params", "param_type": "SSAOParams"}]}, {"method_name": "get_color_correction_params", "method_return": {"return_desc": "Color correction params", "return_type": "ColorCorrectionParams"}}, {"method_name": "set_color_correction_params", "method_params": [{"param_name": "color_corr_params", "param_desc": "Color correction params.", "param_type": "ColorCorrectionParams"}]}, {"method_name": "get_sky_params", "method_return": {"return_desc": "Sky params", "return_type": "SkyParams"}}, {"method_name": "set_sky_params", "method_params": [{"param_name": "sky_params", "param_desc": "Sky params", "param_type": "SkyParams"}]}, {"method_name": "get_dof_params", "method_return": {"return_desc": "DOF params", "return_type": "DOFParams"}}, {"method_name": "set_dof_params", "method_params": [{"param_name": "DOF", "param_desc": "params", "param_type": "DOFParams"}]}, {"method_name": "get_god_rays_params", "method_return": {"return_desc": "god rays parameters", "return_type": "GodRaysParams"}}, {"method_name": "set_god_rays_params", "method_params": [{"param_name": "god", "param_desc": "rays params", "param_type": "GodRaysParams"}]}, {"method_name": "get_bloom_params", "method_return": {"return_desc": "bloom parameters", "return_type": "BloomParams"}}, {"method_name": "set_bloom_params", "method_params": [{"param_name": "bloom", "param_desc": "params", "param_type": "BloomParams"}]}, {"method_name": "get_glow_material_params", "method_return": {"return_desc": "glow material parameters", "return_type": "GlowMaterialParams"}}, {"method_name": "set_glow_material_params", "method_params": [{"param_name": "glow", "param_desc": "material params", "param_type": "GlowMaterialParams"}]}, {"method_name": "get_wind_params", "method_return": {"return_desc": "Wind params", "return_type": "WindParams"}}, {"method_name": "set_wind_params", "method_params": [{"param_name": "wind", "param_desc": "params", "param_type": "WindParams"}]}, {"method_name": "get_water_surface_level", "method_return": {"return_desc": "Surface level", "return_type": "Number"}}, {"method_name": "set_water_params", "method_params": [{"param_name": "water", "param_desc": "params", "param_type": "WaterParams"}]}, {"method_name": "get_water_mat_params", "method_params": [{"param_name": "water", "param_desc": "params", "param_type": "WaterParams"}]}, {"method_name": "update_scene_materials_params"}, {"method_name": "hide_object", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "show_object", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "is_hidden", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "is_visible", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "check_object", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}], "depricated": {"is_depricated": true, "desc": "use check_object_by_name() instead"}}, {"method_name": "check_object_by_name", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "name", "param_desc": "Object name", "param_type": "String"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}]}, {"method_name": "check_object_by_dupli_name", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "empty_name", "param_desc": "Name of the EMPTY object used to duplicate the object", "param_type": "String"}, {"param_name": "dupli_name", "param_desc": "Name of the duplicated object", "param_type": "String"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}]}, {"method_name": "check_object_by_dupli_name_list", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "name_list", "param_desc": "List of the EMPTY and DUPLI object names: [empty_name,empty_name,...,dupli_name]", "param_type": "String[]"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}]}, {"method_name": "get_all_objects", "method_return": {"return_desc": "Array with objects.", "return_type": "Object3D[]"}, "method_params": [{"param_name": "[type=\"ALL\"]", "param_desc": "Type", "param_type": "String"}, {"param_name": "[data_id=DATA_ID_ALL]", "param_desc": "Objects data id", "param_type": "Number"}]}, {"method_name": "get_object_name", "method_return": {"return_desc": "Object name", "return_type": "String"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_object_type", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_object_dg_parent", "method_return": {"return_desc": "Object 3D of parent object", "return_type": "Object3D"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_object_children", "method_return": {"return_desc": "Array of children objects.", "return_type": "Object3D[]"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_first_character", "method_return": {"return_desc": "Character object.", "return_type": "Object3D"}}, {"method_name": "get_shore_dist", "method_return": {"return_desc": "Distance.", "return_type": "Number"}, "method_params": [{"param_name": "trans", "param_desc": "Current translation.", "param_type": "Vec3"}, {"param_name": "[v_dist_mult=1]", "param_desc": "Vertical distance multiplier.", "param_type": "Number"}]}, {"method_name": "get_cam_water_depth", "method_return": {"return_desc": "Depth", "return_type": "Number"}}, {"method_name": "get_type_mesh_object", "method_return": {"return_desc": "Render type: \"DYNAMIC\" or \"STATIC\".", "return_type": "String"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D.", "param_type": "Object3D"}]}, {"method_name": "get_meta_tags", "method_return": {"return_desc": "Scene meta tags", "return_type": "SceneMetaTags"}}, {"method_name": "append_object", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "remove_object", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "marker_frame", "method_return": {"return_desc": "Timeline marker frame", "return_type": "Number"}, "method_params": [{"param_name": "name", "param_desc": "Timeline marker name", "param_type": "String"}]}, {"method_name": "get_mb_params", "method_return": {"return_desc": "Motion blur params", "return_type": "MotionBlurParams"}}, {"method_name": "set_mb_params", "method_params": [{"param_name": "mb_params", "param_desc": "Motion blur params", "param_type": "MotionBlurParams"}]}]}, {"module_const": [{"const_type": "AnimSlot", "const_name": "SLOT_0"}, {"const_type": "AnimSlot", "const_name": "SLOT_1"}, {"const_type": "AnimSlot", "const_name": "SLOT_2"}, {"const_type": "AnimSlot", "const_name": "SLOT_3"}, {"const_type": "AnimSlot", "const_name": "SLOT_4"}, {"const_type": "AnimSlot", "const_name": "SLOT_5"}, {"const_type": "AnimSlot", "const_name": "SLOT_6"}, {"const_type": "AnimSlot", "const_name": "SLOT_7"}, {"const_type": "AnimSlot", "const_name": "SLOT_ALL"}, {"const_type": "AnimType", "const_name": "OBJ_ANIM_TYPE_NONE"}, {"const_type": "AnimType", "const_name": "OBJ_ANIM_TYPE_ARMATURE"}, {"const_type": "AnimType", "const_name": "OBJ_ANIM_TYPE_OBJECT"}, {"const_type": "AnimType", "const_name": "OBJ_ANIM_TYPE_VERTEX"}, {"const_type": "AnimType", "const_name": "OBJ_ANIM_TYPE_SOUND"}, {"const_type": "AnimType", "const_name": "OBJ_ANIM_TYPE_PARTICLES"}, {"const_type": "AnimType", "const_name": "OBJ_ANIM_TYPE_MATERIAL"}, {"const_type": "AnimBehavior", "const_name": "AB_CYCLIC"}, {"const_type": "AnimBehavior", "const_name": "AB_FINISH_RESET"}, {"const_type": "AnimBehavior", "const_name": "AB_FINISH_STOP"}], "module_name": "animation", "module_methods": [{"method_name": "is_animated", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_actions", "method_return": {"return_desc": "Animation names.", "return_type": "String[]"}, "depricated": {"is_depricated": true, "desc": "Use get_anim_names() instead."}}, {"method_name": "get_current_action", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use get_current_anim_name() instead."}}, {"method_name": "get_anim_names", "method_return": {"return_desc": "Array of animation names.", "return_type": "String[]"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_current_anim_name", "method_return": {"return_desc": "Current animation name or null.", "return_type": "?String"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "apply", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "name", "param_desc": "Animation name", "param_type": "String"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number.", "param_type": "Number"}]}, {"method_name": "remove", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "remove_slot_animation", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number.", "param_type": "Number"}]}, {"method_name": "apply_def", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "play", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[finish_callback]", "param_desc": "Callback to execute on finished animation", "param_type": "AnimFinishCallback"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number.", "param_type": "Number"}]}, {"method_name": "stop", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "is_play", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "set_current_frame_float", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "cff", "param_desc": "Current frame", "param_type": "Number"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use set_frame() instead."}}, {"method_name": "get_current_frame_float", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use get_frame() instead"}}, {"method_name": "set_frame", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "frame", "param_desc": "Current frame (float)", "param_type": "Number"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "get_frame", "method_return": {"return_desc": "Current frame", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "set_speed", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "speed", "param_desc": "Speed (may be negative) (float)", "param_type": "Number"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "get_speed", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "get_frame_range", "method_return": {"return_desc": "Frame range pair or null for incorrect object", "return_type": "Array"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use get_anim_start_frame() and get_anim_length() instead"}}, {"method_name": "get_anim_start_frame", "method_return": {"return_desc": "Animation start frame or -1 for incorrect object", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "get_anim_length", "method_return": {"return_desc": "Animation length or -1 for incorrect object", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "cyclic", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use set_behavior() instead."}}, {"method_name": "is_cyclic", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use get_behavior() instead."}}, {"method_name": "set_behavior", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "behavior", "param_desc": "Behavior enum", "param_type": "Number"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "get_behavior", "method_return": {"return_desc": "Behavior enum", "return_type": "AnimBehavior"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "apply_smoothing", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[trans_period=0]", "param_desc": "Translation smoothing period", "param_type": "Number"}, {"param_name": "[quat_period=0]", "param_desc": "Rotation smoothing period", "param_type": "Number"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}]}, {"method_name": "update_object_animation", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "elapsed", "param_desc": "Animation delay", "param_type": "Number"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Animation slot number", "param_type": "Number"}, {"param_name": "[force_update", "param_desc": "= false] Update animation even stopped one.", "param_type": "Boolean"}], "depricated": {"is_depricated": true, "desc": "Use set_frame() instead."}}, {"method_name": "frame_to_sec", "method_return": {"return_desc": "Number of seconds", "return_type": "Number"}, "method_params": [{"param_name": "frame", "param_desc": "Frame number", "param_type": "Number"}]}, {"method_name": "get_bone_translation", "method_params": [{"param_name": "armobj", "param_desc": "Armature object", "param_type": "Object3D"}, {"param_name": "bone_name", "param_desc": "Bone name", "param_type": "String"}, {"param_name": "dest", "param_desc": "Destination vector", "param_type": "Vec3"}]}, {"method_name": "get_first_armature_object", "method_return": {"return_desc": "Armature object or null", "return_type": "?Object3D"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "get_slot_num_by_anim", "method_return": {"return_desc": "Animation slot number", "return_type": "?Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "anim_name", "param_desc": "Animation name", "param_type": "String"}]}, {"method_name": "get_anim_type", "method_return": {"return_desc": "Animation type", "return_type": "AnimType"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[slot_num", "param_desc": "= SLOT_0] Slot number", "param_type": "Number"}]}, {"method_name": "apply_to_first_empty_slot", "method_return": {"return_desc": "Slot number or -1 if no empty slots found.", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "name", "param_desc": "Animation name.", "param_type": "String"}]}, {"method_name": "get_skel_mix_factor", "method_return": {"return_desc": "Mix factor.", "return_type": "Number"}, "method_params": [{"param_name": "armobj", "param_desc": "Armature object.", "param_type": "Object3D"}]}, {"method_name": "set_skel_mix_factor", "method_params": [{"param_name": "armobj", "param_desc": "Armature object.", "param_type": "Object3D"}, {"param_name": "factor", "param_desc": "Target animation mix factor.", "param_type": "Number"}, {"param_name": "[time=0]", "param_desc": "Time interval for changing the mix factor from", "param_type": "Number"}]}]}, {"module_name": "controls", "module_methods": [{"method_name": "create_custom_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}, "method_params": [{"param_name": "value", "param_desc": "Initial custom sensor value", "param_type": "Number"}]}, {"method_name": "create_keyboard_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}, "method_params": [{"param_name": "key", "param_desc": "Sensor key KEY_*", "param_type": "Number"}]}, {"method_name": "create_collision_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}, "method_params": [{"param_name": "obj", "param_desc": "Collision object.", "param_type": "Object3D"}, {"param_name": "[collision_id=\"ANY\"]", "param_desc": "Collision ID", "param_type": "String"}, {"param_name": "[calc_pos_norm=false]", "param_desc": "Should the sensor return the", "param_type": "Boolean"}]}, {"method_name": "create_collision_impulse_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}, "method_params": [{"param_name": "obj", "param_desc": "Collision object.", "param_type": "Object3D"}]}, {"method_name": "create_ray_sensor", "method_return": {"return_desc": "Sensor object.", "return_type": "Sensor"}, "method_params": [{"param_name": "obj_src", "param_desc": "Source object, pass a non-null value to perform ray casting", "param_type": "Object3D"}, {"param_name": "from", "param_desc": "From vector.", "param_type": "Vec3"}, {"param_name": "to", "param_desc": "To vector.", "param_type": "Vec3"}, {"param_name": "[collision_id=\"ANY\"]", "param_desc": "Collision ID to detect intersection with", "param_type": "String"}, {"param_name": "[is_binary_value=false]", "param_desc": "Calculate the value of the sensor as", "param_type": "Boolean"}, {"param_name": "[calc_pos_norm=false]", "param_desc": "Calculate hit position/normal", "param_type": "Boolean"}, {"param_name": "[ign_src_rot=false]", "param_desc": "Ignore any rotation of the source object", "param_type": "Boolean"}]}, {"method_name": "create_mouse_click_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}}, {"method_name": "create_mouse_wheel_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}}, {"method_name": "create_mouse_move_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}, "method_params": [{"param_name": "[axis=\"XY\"]", "param_desc": "Coordinate(s) to track: \"X\", \"Y\", \"XY\"", "param_type": "String"}]}, {"method_name": "create_touch_move_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}, "method_params": [{"param_name": "[axis=\"XY\"]", "param_desc": "Coordinate(s) to track: \"X\", \"Y\" or \"XY\"", "param_type": "String"}]}, {"method_name": "create_touch_zoom_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}}, {"method_name": "create_motion_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[threshold=0.1]", "param_desc": "Translation velocity threshold,", "param_type": "Number"}, {"param_name": "[rotation_threshold=0.1]", "param_desc": "Rotation velocity threshold,", "param_type": "Number"}]}, {"method_name": "create_vertical_velocity_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "[threshold=1.0]", "param_desc": "Vertical velocity threshold,", "param_type": "Number"}]}, {"method_name": "create_gyroscope_angles_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}}, {"method_name": "create_gyroscope_angles_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}}, {"method_name": "create_timer_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}, "method_params": [{"param_name": "period", "param_desc": "Timer period, in seconds", "param_type": "Number"}, {"param_name": "[do_repeat=false]", "param_desc": "Re-start the timer upon expiration", "param_type": "Boolean"}]}, {"method_name": "reset_timer_sensor", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "manifold_id", "param_desc": "Object's manifold ID", "param_type": "String"}, {"param_name": "num", "param_desc": "Sensor's number in the manifold", "param_type": "Number"}, {"param_name": "period", "param_desc": "A new period value for the sensor", "param_type": "Number"}]}, {"method_name": "create_elapsed_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}}, {"method_name": "create_timeline_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}}, {"method_name": "create_selection_sensor", "method_return": {"return_desc": "Sensor object", "return_type": "Sensor"}}, {"method_name": "set_custom_sensor", "method_params": [{"param_name": "sensor", "param_desc": "Sensor object", "param_type": "Sensor"}, {"param_name": "value", "param_desc": "New sensor value", "param_type": "Number"}]}, {"method_name": "get_custom_sensor", "method_return": {"return_desc": "Sensor value", "return_type": "Number"}, "method_params": [{"param_name": "sensor", "param_desc": "Sensor object", "param_type": "Sensor"}]}, {"method_name": "get_sensor_value", "method_return": {"return_desc": "Sensor value", "return_type": "Number"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D, or null to denote the global object", "param_type": "?Object3D"}, {"param_name": "manifold_id", "param_desc": "Object's manifold ID", "param_type": "String"}, {"param_name": "num", "param_desc": "Sensor index in manifold's array", "param_type": "Number"}]}, {"method_name": "get_sensor_payload", "method_return": {"return_desc": "Sensor payload", "return_type": "*"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D, or null to denote the global object", "param_type": "?Object3D"}, {"param_name": "manifold_id", "param_desc": "Object's manifold ID", "param_type": "String"}, {"param_name": "num", "param_desc": "Sensor index in manifold's array", "param_type": "Number"}]}, {"method_name": "create_sensor_manifold", "method_params": [{"param_name": "obj", "param_desc": "Object 3D to attach the manifold to, or null to denote", "param_type": "?Object3D"}, {"param_name": "id", "param_desc": "New manifold ID.", "param_type": "String"}, {"param_name": "type", "param_desc": "Manifold control type (CT_SHOT, CT_TRIGGER etc).", "param_type": "Number"}, {"param_name": "sensors", "param_desc": "Array of sensors.", "param_type": "Sensor[]"}, {"param_name": "logic_fun", "param_desc": "Manifold's logic function.", "param_type": "ManifoldLogicFunction"}, {"param_name": "callback", "param_desc": "Manifold's callback.", "param_type": "ManifoldCallback"}, {"param_name": "[callback_param]", "param_desc": "Parameter to pass to the manifold's callback", "param_type": "*"}]}, {"method_name": "create_kb_sensor_manifold", "method_params": [{"param_name": "obj", "param_desc": "Object 3D to attach the manifold to, or null to denote", "param_type": "?Object3D"}, {"param_name": "id", "param_desc": "New manifold ID", "param_type": "String"}, {"param_name": "type", "param_desc": "Manifold control type (CT_SHOT, CT_TRIGGER etc)", "param_type": "Number"}, {"param_name": "key", "param_desc": "Sensor key KEY_*", "param_type": "Number"}, {"param_name": "callback", "param_desc": "Manifold's callback", "param_type": "ManifoldCallback"}, {"param_name": "[callback_param]", "param_desc": "Parameter to pass to the manifold's callback", "param_type": "*"}]}, {"method_name": "check_sensor_manifolds", "method_return": {"return_desc": "Result of the check", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D, or null to denote the global object", "param_type": "?Object3D"}]}, {"method_name": "check_sensor_manifold", "method_return": {"return_desc": "Result of the check", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D, or null to denote the global object", "param_type": "?Object3D"}, {"param_name": "id", "param_desc": "Manifold ID", "param_type": "String"}]}, {"method_name": "remove_sensor_manifolds", "method_params": [{"param_name": "obj", "param_desc": "Object 3D to delete manifolds from, or null to denote", "param_type": "?Object3D"}], "depricated": {"is_depricated": true, "desc": "Use remove_sensor_manifold with null manifold ID instead"}}, {"method_name": "remove_sensor_manifold", "method_params": [{"param_name": "obj", "param_desc": "Object 3D to delete the manifold from, or null to denote", "param_type": "?Object3D"}, {"param_name": "[id=null]", "param_desc": "ID of the sensor manifold, or null to delete all", "param_type": "String"}]}, {"method_name": "reset"}, {"method_name": "register_keyboard_events"}, {"method_name": "register_mouse_events"}, {"method_name": "register_wheel_events"}, {"method_name": "register_touch_events"}, {"method_name": "register_device_orientation"}, {"method_name": "unregister_keyboard_events"}, {"method_name": "unregister_mouse_events"}, {"method_name": "unregister_wheel_events"}, {"method_name": "unregister_touch_events"}, {"method_name": "unregister_device_orientation"}]}, {"module_name": "rgb"}, {"module_name": "container", "module_methods": [{"method_name": "get_canvas", "method_return": {"return_desc": "Canvas element", "return_type": "HTMLElement"}}, {"method_name": "get_container", "method_return": {"return_desc": "Canvas container element", "return_type": "HTMLElement"}}, {"method_name": "insert_to_container", "method_params": [{"param_name": "obj", "param_desc": "Inserted DOM element.", "param_type": "HTMLElement"}, {"param_name": "stack_order", "param_desc": "Inserted DOM element stack order (one of \"FIRST\",", "param_type": "String"}]}, {"method_name": "set_canvas_offsets", "method_params": [{"param_name": "left", "param_desc": "Left offset for the container", "param_type": "Number"}, {"param_name": "top", "param_desc": "Top offset for the container", "param_type": "Number"}]}, {"method_name": "update_canvas_offsets"}, {"method_name": "client_to_canvas_coords", "method_return": {"return_desc": "CSS coordinates relative to the Canvas.", "return_type": "Vec2"}, "method_params": [{"param_name": "x", "param_desc": "X client coordinate.", "param_type": "Number"}, {"param_name": "y", "param_desc": "Y client coordinate.", "param_type": "Number"}, {"param_name": "dest", "param_desc": "CSS coordinates relative to the Canvas.", "param_type": "Vec2"}]}, {"method_name": "force_offsets_updating"}]}, {"module_const": [{"const_type": "Vec3", "const_name": "AXIS_X"}, {"const_type": "Vec3", "const_name": "AXIS_Y"}, {"const_type": "Vec3", "const_name": "AXIS_Z"}, {"const_type": "Vec3", "const_name": "AXIS_MX"}, {"const_type": "Vec3", "const_name": "AXIS_MY"}, {"const_type": "Vec3", "const_name": "AXIS_MZ"}], "module_name": "util", "module_methods": [{"method_name": "assert", "method_params": [{"param_name": "Boolean", "param_desc": "expression result", "param_type": "Boolean"}]}, {"method_name": "keyfind", "method_return": {"return_desc": "Array of found objects.", "return_type": "Object[]"}, "method_params": [{"param_name": "key", "param_desc": "Key", "param_type": "String"}, {"param_name": "value", "param_desc": "Value", "param_type": "*"}, {"param_name": "array", "param_desc": "Array of objects.", "param_type": "Object[]"}]}, {"method_name": "keysearch", "method_return": {"return_desc": "First found object or null.", "return_type": "?Object"}, "method_params": [{"param_name": "key", "param_desc": "Key.", "param_type": "String"}, {"param_name": "value", "param_desc": "Value.", "param_type": "*"}, {"param_name": "array", "param_desc": "Array of objects.", "param_type": "Array"}]}, {"method_name": "matrix_to_quat", "method_return": {"return_desc": "Quaternion", "return_type": "Quat"}, "method_params": [{"param_name": "matrix", "param_desc": "4x4 matrix", "param_type": "Mat4"}]}, {"method_name": "euler_to_quat", "method_return": {"return_desc": "Quaternion vector", "return_type": "Quat"}, "method_params": [{"param_name": "euler", "param_desc": "Euler vector", "param_type": "Euler"}, {"param_name": "quat", "param_desc": "Destination quaternion vector", "param_type": "Quat"}]}, {"method_name": "quat_to_euler", "method_return": {"return_desc": "Euler vector", "return_type": "Euler"}, "method_params": [{"param_name": "quat", "param_desc": "Quaternion vector", "param_type": "Quat"}, {"param_name": "euler", "param_desc": "Destination euler vector", "param_type": "Euler"}]}, {"method_name": "sign", "method_return": {"return_desc": "-1,0,1 for negative, zero or positive number accordingly", "return_type": "Number"}, "method_params": [{"param_name": "value", "param_desc": "Input value", "param_type": "Number"}]}, {"method_name": "clamp", "method_return": {"return_desc": "Clamped value", "return_type": "Number"}, "method_params": [{"param_name": "value", "param_desc": "Input value", "param_type": "Number"}, {"param_name": "min", "param_desc": "Lower bound", "param_type": "Number"}, {"param_name": "max", "param_desc": "Upper bound", "param_type": "Number"}]}, {"method_name": "quat_to_dir", "method_return": {"return_desc": "Destination vector.", "return_type": "Vec3"}, "method_params": [{"param_name": "quat", "param_desc": "Rotation quaternion", "param_type": "Quat"}, {"param_name": "ident", "param_desc": "Identity vector", "param_type": "Vec3"}, {"param_name": "[dest]", "param_desc": "Destination vector", "param_type": "Vec3"}]}, {"method_name": "ground_project_quat", "method_return": {"return_desc": "Destination quaternion.", "return_type": "Quat"}, "method_params": [{"param_name": "quat", "param_desc": "Source quaternion.", "param_type": "Quat"}]}, {"method_name": "cam_quat_to_mesh_quat", "method_return": {"return_desc": "Destination quaternion.", "return_type": "Quat"}, "method_params": [{"param_name": "quat", "param_desc": "Camera quaternion.", "param_type": "Quat"}, {"param_name": "[dest]", "param_desc": "Destination quaternion.", "param_type": "Quat"}]}, {"method_name": "quat_project", "method_return": {"return_desc": "Destination quaternion.", "return_type": "Quat"}, "method_params": [{"param_name": "quat", "param_desc": "Quaternion to project.", "param_type": "Quat"}, {"param_name": "quat_ident_dir", "param_desc": "Direction corresponding to the identity quaternion.", "param_type": "Vec3"}, {"param_name": "plane", "param_desc": "Plane direction (normal).", "param_type": "Vec3"}, {"param_name": "plane_ident_dir", "param_desc": "Direction corresponding to the", "param_type": "Vec3"}, {"param_name": "[dest=quat.create()]", "param_desc": "Destination quaternion.", "param_type": "Quat"}]}, {"method_name": "smooth", "method_return": {"return_desc": "Smoothed value", "return_type": "Number"}, "method_params": [{"param_name": "curr", "param_desc": "Current value.", "param_type": "Number"}, {"param_name": "last", "param_desc": "Last smoothed value.", "param_type": "Number"}, {"param_name": "delta", "param_desc": "Time delta.", "param_type": "Number"}, {"param_name": "pariod", "param_desc": "Mean lifetime for avaraging.", "param_type": "Number"}]}, {"method_name": "smooth_v", "method_return": {"return_desc": "Smoothed value", "return_type": "Float32Array"}, "method_params": [{"param_name": "curr", "param_desc": "Current value.", "param_type": "Float32Array"}, {"param_name": "last", "param_desc": "Last smoothed value.", "param_type": "Float32Array"}, {"param_name": "delta", "param_desc": "Time delta.", "param_type": "Float32Array"}, {"param_name": "pariod", "param_desc": "Mean lifetime for avaraging.", "param_type": "Float32Array"}, {"param_name": "[dest]", "param_desc": "Smoothed value", "param_type": "Float32Array"}]}, {"method_name": "is_vector", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "o", "param_desc": "Object", "param_type": "Object"}, {"param_name": "[dimension=0]", "param_desc": "Dimension, allow any if not specified", "param_type": "Number"}]}, {"method_name": "correct_cam_quat_up", "method_params": [{"param_name": "quat", "param_desc": "Quaternion to correct", "param_type": "Quat"}, {"param_name": "up_only", "param_desc": "Disable upside-down camera view", "param_type": "Boolean"}]}, {"method_name": "is_mesh", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "is_armature", "method_return": {"return_desc": "Check result", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "angle_wrap_0_2pi", "method_return": {"return_desc": "Converted angle", "return_type": "Number"}, "method_params": [{"param_name": "angle", "param_desc": "Angle in radians", "param_type": "Number"}]}, {"method_name": "angle_wrap_periodic", "method_return": {"return_desc": "Converted angle", "return_type": "Number"}, "method_params": [{"param_name": "angle", "param_desc": "Angle in radians", "param_type": "Number"}, {"param_name": "from", "param_desc": "Value from in radians", "param_type": "Number"}, {"param_name": "to", "param_desc": "Value to in radians", "param_type": "Number"}]}, {"method_name": "smooth_step", "method_return": {"return_desc": "Result value.", "return_type": "Number"}, "method_params": [{"param_name": "t", "param_desc": "Input value.", "param_type": "Number"}]}]}, {"module_name": "particles", "module_methods": [{"method_name": "set_size", "method_params": [{"param_name": "obj", "param_desc": "Emitter object.", "param_type": "Object3D"}, {"param_name": "psys_name", "param_desc": "Particles system name.", "param_type": "String"}, {"param_name": "size", "param_desc": "Particles size.", "param_type": "Number"}]}, {"method_name": "set_normal_factor", "method_params": [{"param_name": "obj", "param_desc": "Emitter object.", "param_type": "Object3D"}, {"param_name": "psys_name", "param_desc": "Particles system name.", "param_type": "String"}, {"param_name": "nfactor", "param_desc": "Particles normal factor.", "param_type": "Number"}]}, {"method_name": "set_factor", "method_params": [{"param_name": "obj", "param_desc": "Emitter object.", "param_type": "Object3D"}, {"param_name": "psys_name", "param_desc": "Particles system name.", "param_type": "String"}, {"param_name": "factor", "param_desc": "Particles num factor.", "param_type": "Number"}]}]}, {"module_name": "objects", "module_methods": [{"method_name": "get_meta_tags", "method_return": {"return_desc": "Object meta tags", "return_type": "ObjectMetaTags"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "copy", "method_return": {"return_desc": "New object.", "return_type": "Object3D"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "new_name", "param_desc": "New unique object name", "param_type": "String"}, {"param_name": "[deep_copy=false]", "param_desc": "Copy WebGL buffers", "param_type": "Boolean"}]}, {"method_name": "set_nodemat_value", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "name_list", "param_desc": "List consisting of the material name, the names of", "param_type": "String[]"}, {"param_name": "value", "param_desc": "The value to set the Value node to", "param_type": "Number"}]}, {"method_name": "set_nodemat_rgb", "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}, {"param_name": "name_list", "param_desc": "List consisting of the material name, the names of", "param_type": "String[]"}, {"param_name": "r", "param_desc": "The value to set the red channel of the RGB node to", "param_type": "Number"}, {"param_name": "g", "param_desc": "The value to set the green channel of the RGB node to", "param_type": "Number"}, {"param_name": "b", "param_desc": "The value to set the blue channel of the RGB node to", "param_type": "Number"}]}]}, {"module_const": [{"const_type": "CameraMoveStyle", "const_name": "MS_STATIC"}, {"const_type": "CameraMoveStyle", "const_name": "MS_ANIMATION"}, {"const_type": "CameraMoveStyle", "const_name": "MS_TARGET_CONTROLS"}, {"const_type": "CameraMoveStyle", "const_name": "MS_EYE_CONTROLS"}, {"const_type": "CameraMoveStyle", "const_name": "MS_HOVER_CONTROLS"}], "module_name": "camera", "module_methods": [{"method_name": "is_camera", "method_return": {"return_desc": "Checking result.", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "is_target_camera", "method_return": {"return_desc": "Checking result.", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "is_eye_camera", "method_return": {"return_desc": "Checking result.", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "is_hover_camera", "method_return": {"return_desc": "Checking result.", "return_type": "Boolean"}, "method_params": [{"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "set_move_style", "method_return": {"return_desc": "success Operation success flag.", "return_type": "Boolean"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "move_style", "param_desc": "Camera movement style", "param_type": "CameraMoveStyle"}]}, {"method_name": "get_move_style", "method_return": {"return_desc": "Camera movement style.", "return_type": "CameraMoveStyle"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}]}, {"method_name": "set_velocity_params", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "velocity", "param_desc": "Camera velocity params (velocity_trans, velocity_rot, velocity_zoom)", "param_type": "Vec3"}]}, {"method_name": "get_velocity_params", "method_return": {"return_desc": "Velocity params [velocity_trans, velocity_rot,", "return_type": "Vec3"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "[dest=vec3.create()]", "param_desc": "Velocity params [velocity_trans, velocity_rot,", "param_type": "Vec3"}]}, {"method_name": "set_look_at", "method_params": [{"param_name": "camobj", "param_desc": "Camera object.", "param_type": "Object3D"}, {"param_name": "eye", "param_desc": "Eye vector.", "param_type": "Vec3"}, {"param_name": "target", "param_desc": "Target vector.", "param_type": "Vec3"}, {"param_name": "up", "param_desc": "Up vecto.", "param_type": "Vec3"}]}, {"method_name": "get_eye", "method_return": {"return_desc": "Destination eye vector.", "return_type": "Vec3"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "[dest=vec3.create()]", "param_desc": "Destination eye vector.", "param_type": "Vec3"}]}, {"method_name": "set_pivot", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "coords", "param_desc": "New pivot vector.", "param_type": "Vec3"}]}, {"method_name": "set_trans_pivot", "method_params": [{"param_name": "camobj", "param_desc": "Camera Object 3D", "param_type": "Object3D"}, {"param_name": "trans", "param_desc": "Translation vector", "param_type": "Vec3"}, {"param_name": "pivot", "param_desc": "Pivot vector", "param_type": "Vec3"}]}, {"method_name": "get_pivot", "method_return": {"return_desc": "Destination pivot vector.", "return_type": "Vec3"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "[dest]", "param_desc": "Destination pivot vector.", "param_type": "Vec3"}]}, {"method_name": "rotate_pivot", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "delta_phi", "param_desc": "Azimuth angle in radians", "param_type": "Number"}, {"param_name": "delta_theta", "param_desc": "Elevation angle in radians", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "use rotate_camera() or rotate_target_camera() instead."}}, {"method_name": "move_pivot", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "trans_h_delta", "param_desc": "Delta of the horizontal translation", "param_type": "Number"}, {"param_name": "trans_v_delta", "param_desc": "Delta of the vertical translation", "param_type": "Number"}]}, {"method_name": "rotate_hover_cam", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "angle", "param_desc": "Horizontal angle in radians", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use rotate_camera() or rotate_hover_camera() instead."}}, {"method_name": "get_hover_cam_angle", "method_return": {"return_desc": "An angle of the hover camera", "return_type": "Number"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}], "depricated": {"is_depricated": true, "desc": "Use get_camera_angles() instead."}}, {"method_name": "set_hover_cam_angle", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "angle", "param_desc": "Angle between the view and the horizontal plane", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use rotate_camera() or rotate_hover_camera() instead."}}, {"method_name": "get_hover_angle_limits", "method_return": {"return_desc": "Destination vector [hover_angle_limits.down, hover_angle_limits.up].", "return_type": "Vec2"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "[angles]", "param_desc": "Destination vector [hover_angle_limits.down, hover_angle_limits.up].", "param_type": "Vec2"}]}, {"method_name": "get_cam_dist_limits", "method_return": {"return_desc": "Array of distance limits [distance_max, distance_min].", "return_type": "Vec2"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "[dist]", "param_desc": "Array of distance limits [distance_max, distance_min].", "param_type": "Vec2"}]}, {"method_name": "translate_hover_cam_v", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "trans", "param_desc": "Translation vector", "param_type": "Vec3"}], "depricated": {"is_depricated": true, "desc": "Use hover_cam_set_translation() instead."}}, {"method_name": "hover_cam_set_translation", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "trans", "param_desc": "Translation vector.", "param_type": "Vec3"}]}, {"method_name": "set_hover_pivot", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "coords", "param_desc": "Pivot vector", "param_type": "Vec3"}]}, {"method_name": "get_hover_cam_pivot", "method_return": {"return_desc": "Destination translation pivot vector.", "return_type": "Vec3"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "[dest=vec3.create()]", "param_desc": "Destination translation pivot vector.", "param_type": "Vec3"}]}, {"method_name": "has_distance_limits", "method_return": {"return_desc": "True if the camera has distance limits.", "return_type": "Boolean"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object.", "param_type": "Object3D"}]}, {"method_name": "apply_vertical_limits", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "down_value", "param_desc": "Vertical down limit", "param_type": "Number"}, {"param_name": "up_value", "param_desc": "Vertical up limit", "param_type": "Number"}, {"param_name": "[space=transform.SPACE_WORLD]", "param_desc": "Space to make clamping relative to (actual for the TARGET/EYE camera)", "param_type": "Space"}]}, {"method_name": "clear_vertical_limits", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}]}, {"method_name": "apply_horizontal_limits", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "left_value", "param_desc": "Horizontal left limit", "param_type": "Number"}, {"param_name": "right_value", "param_desc": "Horizontal right limit", "param_type": "Number"}, {"param_name": "[space=transform.SPACE_WORLD]", "param_desc": "Space to make clamping relative to (actual for the TARGET/EYE camera)", "param_type": "Space"}]}, {"method_name": "clear_horizontal_limits", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}]}, {"method_name": "get_horizontal_limits", "method_return": {"return_desc": "Destination vector for the camera angle limits: [left, right].", "return_type": "?Vec2"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera Object 3D", "param_type": "Object3D"}, {"param_name": "[dest]", "param_desc": "Destination vector for the camera angle limits: [left, right].", "param_type": "Vec2"}]}, {"method_name": "has_horizontal_limits", "method_return": {"return_desc": "True if the camera has horizontal limits.", "return_type": "Boolean"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera Object 3D", "param_type": "Object3D"}]}, {"method_name": "apply_hover_angle_limits", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "down_angle", "param_desc": "Down hover angle limit", "param_type": "Number"}, {"param_name": "up_angle", "param_desc": "Up hover angle limit", "param_type": "Number"}]}, {"method_name": "clear_hover_angle_limits", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}]}, {"method_name": "apply_distance_limits", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "min", "param_desc": "Minimum distance to target", "param_type": "Number"}, {"param_name": "max", "param_desc": "Maximum distance to target", "param_type": "Number"}]}, {"method_name": "clear_distance_limits", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}]}, {"method_name": "set_eye_params", "depricated": {"is_depricated": true, "desc": "Use rotate_camera() or rotate_eye_camera() to change the camera orientation."}}, {"method_name": "is_look_up", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}]}, {"method_name": "rotate_camera", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "phi", "param_desc": "Azimuth angle in radians", "param_type": "Number"}, {"param_name": "theta", "param_desc": "Elevation angle in radians", "param_type": "Number"}, {"param_name": "[phi_is_abs=false]", "param_desc": "For phi angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "param_type": "Boolean"}, {"param_name": "[theta_is_abs=false]", "param_desc": "For theta angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "param_type": "Boolean"}]}, {"method_name": "rotate_target_camera", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "phi", "param_desc": "Azimuth angle in radians", "param_type": "Number"}, {"param_name": "theta", "param_desc": "Elevation angle in radians", "param_type": "Number"}, {"param_name": "[phi_is_abs=false]", "param_desc": "For phi angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "param_type": "Boolean"}, {"param_name": "[theta_is_abs=false]", "param_desc": "For theta angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "param_type": "Boolean"}]}, {"method_name": "rotate_eye_camera", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "phi", "param_desc": "Azimuth angle in radians", "param_type": "Number"}, {"param_name": "theta", "param_desc": "Elevation angle in radians", "param_type": "Number"}, {"param_name": "[phi_is_abs=false]", "param_desc": "For phi angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "param_type": "Boolean"}, {"param_name": "[theta_is_abs=false]", "param_desc": "For theta angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "param_type": "Boolean"}]}, {"method_name": "rotate_hover_camera", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "phi", "param_desc": "Azimuth angle in radians", "param_type": "Number"}, {"param_name": "theta", "param_desc": "Elevation angle in radians", "param_type": "Number"}, {"param_name": "[phi_is_abs=false]", "param_desc": "For phi angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "param_type": "Boolean"}, {"param_name": "[theta_is_abs=false]", "param_desc": "For theta angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "param_type": "Boolean"}]}, {"method_name": "rotate", "method_params": [{"param_name": "camobj", "param_desc": "Camera Object 3D", "param_type": "Object3D"}, {"param_name": "delta_phi", "param_desc": "Azimuth angle delta in radians", "param_type": "Number"}, {"param_name": "delta_theta", "param_desc": "Elevation angle delta in radians", "param_type": "Number"}], "depricated": {"is_depricated": true, "desc": "Use rotate_camera() or rotate_eye_camera() instead."}}, {"method_name": "get_camera_angles", "method_return": {"return_desc": "Destination vector for the camera angles: [phi, theta]", "return_type": "Vec2"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "[dest]", "param_desc": "Destination vector for the camera angles: [phi, theta],", "param_type": "Vec2"}]}, {"method_name": "get_camera_angles_char", "method_return": {"return_desc": "Destination vector for the camera angles: [phi, theta]", "return_type": "Vec2"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "[dest]", "param_desc": "Destination vector for the camera angles: [phi, theta],", "param_type": "Vec2"}]}, {"method_name": "get_angles", "method_return": {"return_desc": "Destination vector for the camera angles: [h, v]", "return_type": "Vec2"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera Object 3D", "param_type": "Object3D"}, {"param_name": "[dest]", "param_desc": "Destination vector for the camera angles: [h, v]", "param_type": "Vec2"}], "depricated": {"is_depricated": true, "desc": "Use get_camera_angles() instead."}}, {"method_name": "set_stereo_distance", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "conv_dist", "param_desc": "Distance from the convergence plane", "param_type": "Number"}]}, {"method_name": "get_stereo_distance", "method_return": {"return_desc": "Distance from convergence plane", "return_type": "Number"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}]}, {"method_name": "is_underwater", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}], "depricated": {"is_depricated": true, "desc": "Always returns false."}}, {"method_name": "translate_view", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "x", "param_desc": "X coord (positive - left to right)", "param_type": "Number"}, {"param_name": "y", "param_desc": "Y coord (positive - down to up)", "param_type": "Number"}, {"param_name": "angle", "param_desc": "Rotation angle (clockwise)", "param_type": "Number"}]}, {"method_name": "get_fov", "method_return": {"return_desc": "Camera field of view (in radians)", "return_type": "Number"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}]}, {"method_name": "set_fov", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "fov", "param_desc": "New camera field of view (in radians)", "param_type": "Number"}]}, {"method_name": "correct_up", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "y_axis", "param_desc": "Axis vector", "param_type": "Vec3"}]}, {"method_name": "zoom_object", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "obj", "param_desc": "Object 3D", "param_type": "Object3D"}]}, {"method_name": "set_ortho_scale", "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "ortho_scale", "param_desc": "Orthogonal scale.", "param_type": "Number"}]}, {"method_name": "get_ortho_scale", "method_return": {"return_desc": "Orthogonal scale", "return_type": "Number"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}]}, {"method_name": "is_ortho_camera", "method_return": {"return_desc": "In case of the orthogonal type of the camera it is true, else false", "return_type": "Boolean"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera Object 3D", "param_type": "Object3D"}]}, {"method_name": "calc_ray", "method_return": {"return_desc": "Destination vector", "return_type": "Vec3"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "canvas_x", "param_desc": "X Canvas coordinate", "param_type": "Number"}, {"param_name": "canvas_y", "param_desc": "Y Canvas coordinate", "param_type": "Number"}, {"param_name": "[dest]", "param_desc": "Destination vector", "param_type": "Vec3"}]}, {"method_name": "project_point", "method_return": {"return_desc": "Destination canvas coordinates.", "return_type": "Vec2|Vec3"}, "method_params": [{"param_name": "camobj", "param_desc": "Camera object 3D", "param_type": "Object3D"}, {"param_name": "point", "param_desc": "Point in world space", "param_type": "Vec3"}, {"param_name": "[dest]", "param_desc": "Destination canvas coordinates (vec2 - X/Y, vec3 - X/Y/DEPTH).", "param_type": "Vec2|Vec3"}]}]}, {"module_name": "assets", "module_methods": [{"method_name": "enqueue", "method_params": [{"param_name": "assets_pack", "param_desc": "Array of the assets in the following format: [[uri, type, filepath, optional_param], ...]", "param_type": "Array"}, {"param_name": "[asset_cb]", "param_desc": "Callback executed after a single asset is loaded", "param_type": "AssetCallback"}, {"param_name": "[pack_cb]", "param_desc": "Callback executed after the whole pack of assets is loaded", "param_type": "PackCallback"}, {"param_name": "[progress_cb]", "param_desc": "Callback for the progress of loading", "param_type": "ProgressCallback"}]}]}, {"module_name": "textures", "module_methods": [{"method_name": "get_canvas_texture_context", "method_return": {"return_desc": "Canvas texture context", "return_type": "CanvasRenderingContext2D"}, "method_params": [{"param_name": "id", "param_desc": "Canvas texture name", "param_type": "String"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}]}, {"method_name": "update_canvas_texture_context", "method_params": [{"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}, {"param_name": "id", "param_desc": "Canvas texture name", "param_type": "String"}]}, {"method_name": "play_video", "method_params": [{"param_name": "texture_name", "param_desc": "Texture name", "param_type": "String"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}]}, {"method_name": "pause_video", "method_params": [{"param_name": "texture_name", "param_desc": "Texture name", "param_type": "String"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}]}, {"method_name": "reset_video", "method_params": [{"param_name": "texture_name", "param_desc": "Texture name", "param_type": "String"}, {"param_name": "[data_id=0]", "param_desc": "ID of loaded data", "param_type": "Number"}]}]}], "types": ["SkyParams", "ConstraintLimits", "ColorCorrectionParams", "String[]", "ProgressCallback", "RayTestCallback|RayTestCallbackPosNorm", "(Object3D|Vec3)", "Uint16Array|Uint32Array", "StageloadCallback", "GlowMaterialParams", "CompressorParams", "Object3D", "Object[]", "RGB", "MotionBlurParams", "RayTestCallback", "LoadedCallback", "AnchorMoveCallback", "TSR", "DOFParams", "?NlaFinishCallback", "PackCallback", "FPSCallback", "CollisionImpulseCallback", "String", "Sensor", "Quat", "Sensor[]", "*", "Object3D[]", "ManifoldLogicFunction", "(Object3D|Array)", "vec4", "Space", "SSAOParams", "RGBA", "Date", "Vec2", "Float32Array", "?Float32Array", "?Number", "Vec2|Vec3", "Mat4", "MaterialExtParams", "?Mat4", "WindParams", "LoopCallback", "Object", "FilterParams", "LightParams", "Number | Array | TypedArray", "HTMLElement", "SunParams", "anim_callback", "ManifoldCallback", "?RGB", "ShadowParams", "?Vec3", "?HtmlElement", "Array", "?Object3D", "AnimFinishCallback", "HTMLCanvasElement", "CollisionCallback", "AssetCallback", "timeout_callback", "WaterMaterialParams", "Data", "Number", "GodRaysParams", "BloomParams", "Vec4", "Boolean", "WaterParams", "Vec3", "CameraMoveStyle", "RenderCallback", "PositionalParams", "Euler"], "aliases": {"AnimBehavior": "Number", "CharacterMoveType": "Number", "AnimSlot": "Number", "SceneMetaTags": "Object", "AnimType": "Number", "QualityProfile": "Number", "ObjectMetaTags": "Object3D"}}
