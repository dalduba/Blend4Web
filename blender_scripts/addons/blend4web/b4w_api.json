[{"method": [{"params": [{"desc": "Source Object 3D", "name": "obj_from", "type": "Object3D"}, {"desc": "Source material name", "name": "mat_from_name", "type": "String"}, {"desc": "Destination Object 3D", "name": "obj_to", "type": "Object3D"}, {"desc": "Destination material name", "name": "mat_to_name", "type": "String"}], "name": "inherit_material"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_materials_names", "return": {"desc": "Array of materials' names", "type": "String[]"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Color+alpha vector", "name": "color", "type": "RGBA"}], "name": "set_diffuse_color"}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_diffuse_color", "return": {"desc": "Material diffuse color+alpha", "type": "RGBA"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Diffuse intencity value", "name": "intensity", "type": "Number"}], "name": "set_diffuse_intensity"}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_diffuse_intensity", "return": {"desc": "Diffuse intencity value", "type": "Number"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Color vector", "name": "color", "type": "RGB"}], "name": "set_specular_color"}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_specular_color", "return": {"desc": "Specular color", "type": "RGB"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Specular intensity value", "name": "intensity", "type": "Number"}], "name": "set_specular_intensity"}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_specular_intensity", "return": {"desc": "Specular color intensity", "type": "Number"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "check_specular_intensity", "return": {"desc": "Specular intensity presence", "type": "Boolean"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Specular hardness value", "name": "hardness", "type": "Number"}], "name": "set_specular_hardness"}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_specular_hardness", "return": {"desc": "Specular color hardness", "type": "Number"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "check_specular_hardness", "return": {"desc": "Specular hardness presence", "type": "Boolean"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Emit factor value", "name": "emit_factor", "type": "Number"}], "name": "set_emit_factor"}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_emit_factor", "return": {"desc": "Emit factor value", "type": "Number"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Ambient factor value", "name": "ambient_factor", "type": "Number"}], "name": "set_ambient_factor"}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_ambient_factor", "return": {"desc": "Ambient factor value", "type": "Number"}}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Diffuse color factor value", "name": "diffuse_color_factor", "type": "Number"}], "name": "set_diffuse_color_factor"}, {"params": [{"desc": "Object 3D ", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_diffuse_color_factor", "return": {"desc": "Diffuse color factor value", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Alpha factor value", "name": "alpha_factor", "type": "Number"}], "name": "set_alpha_factor"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_alpha_factor", "return": {"desc": "Diffuse alpha factor value", "type": "Number"}}, {"params": [{"desc": "Object", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "get_material_extended_params", "return": {"desc": "Material extended params or null", "type": "(MaterialExtParams|null)"}}, {"params": [{"desc": "Object", "name": "obj", "type": "Object3D"}, {"desc": "Water material name", "name": "water_mat_name", "type": "String"}], "name": "get_water_material_params", "return": {"desc": "Water material params or null", "type": "(WaterMaterialParams|null)"}}, {"params": [{"desc": "Object", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Material params", "name": "mat_params", "type": "MaterialExtParams"}], "name": "set_material_params"}, {"params": [{"desc": "Object", "name": "obj", "type": "Object3D"}, {"desc": " Water material name", "name": "water_mat_name", "type": "String"}, {"desc": "Water material params", "name": "water_mat_params", "type": "WaterMaterialParams"}], "name": "set_water_material_params"}], "name": "material", "const": []}, {"method": [{"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "enable_simulation"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "disable_simulation"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "has_physics", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "has_simulated_physics", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "has_dynamic_physics", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Positive object gravity", "name": "gravity", "type": "Number"}], "name": "set_gravity"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Linear damping", "name": "damping", "type": "Number"}, {"desc": "Angular damping", "name": "rotation_damping", "type": "Number"}], "name": "set_damping"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "reset_damping"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Translation vector", "name": "trans", "type": "Vec3"}, {"desc": "Rotation quaternion", "name": "quat", "type": "Quat"}], "name": "set_transform"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "sync_transform"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Vx local space velocity", "name": "vx_local", "type": "Number"}, {"desc": "Vy local space velocity", "name": "vy_local", "type": "Number"}, {"desc": "Vz local space velocity ", "name": "vz_local", "type": "Number"}], "name": "apply_velocity"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Vx world space velocity", "name": "vx", "type": "Number"}, {"desc": "Vy world space velocity", "name": "vy", "type": "Number"}, {"desc": "Vz world space velocity", "name": "vz", "type": "Number"}], "name": "apply_velocity_world"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Fx force in the local space", "name": "fx_local", "type": "Number"}, {"desc": "Fy force in the local space", "name": "fy_local", "type": "Number"}, {"desc": "Fz force in the local space ", "name": "fz_local", "type": "Number"}], "name": "apply_force"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Tx torque", "name": "tx_local", "type": "Number"}, {"desc": "Ty torque", "name": "ty_local", "type": "Number"}, {"desc": "Tz torque", "name": "tz_local", "type": "Number"}], "name": "apply_torque"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Engine force (-1..1)", "name": "engine_force", "type": "Number"}], "name": "vehicle_throttle"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Engine force increment (0..1)", "name": "engine_force", "type": "Number"}, {"desc": "Throttling direction -1,0,1", "name": "dir", "type": "Number"}], "name": "vehicle_throttle_inc"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Steering value (-1..1)", "name": "steering_value", "type": "Number"}], "name": "vehicle_steer"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Steering value increment (0..1)", "name": "steering_value", "type": "Number"}, {"desc": "Steering direction -1,0,1", "name": "dir", "type": "Number"}], "name": "vehicle_steer_inc"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Brake force (0..1)", "name": "brake_force", "type": "Number"}], "name": "vehicle_brake"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Brake force increment (-1..1)", "name": "brake_force", "type": "Number"}], "name": "vehicle_brake_inc"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_vehicle_chassis"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_vehicle_hull"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_vehicle_name"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_vehicle_throttle"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_vehicle_steering", "return": {"desc": "Steering value", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_vehicle_brake", "return": {"desc": "Brake value", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_vehicle_speed", "return": {"desc": "Vehicle speed", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_character", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Apply forward speed", "name": "forw", "type": "Number"}, {"desc": "Apply side speed", "name": "side", "type": "Number"}], "name": "set_character_move_dir"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Character moving type (one of CM_*).", "name": "type", "type": "CharacterMoveType"}], "name": "set_character_move_type"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Walking velocity", "name": "velocity", "type": "Number"}], "name": "set_character_walk_velocity"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Running velocity", "name": "velocity", "type": "Number"}], "name": "set_character_run_velocity"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Flying velocity", "name": "velocity", "type": "Number"}], "name": "set_character_fly_velocity"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "character_jump"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Angle in horizontal plane", "name": "h_angle", "type": "Number"}, {"desc": "Angle in vertical plane", "name": "v_angle", "type": "Number"}], "name": "character_rotation_inc"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Rotation quaternion", "name": "quat", "type": "Quat"}], "name": "set_character_rotation_quat"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Angle in horizontal plane", "name": "angle_h", "type": "Number"}, {"desc": "Angle in vertical plane", "name": "angle_v", "type": "Number"}], "name": "set_character_rotation"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Angle in vertical plane", "name": "angle", "type": "Number"}], "name": "set_character_rotation_v"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Angle in horizontal plane", "name": "angle", "type": "Number"}], "name": "set_character_rotation_h"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Collision ID", "name": "collision_id", "type": "String"}, {"desc": "Collision callback", "name": "callback", "type": "CollisionCallback"}, {"desc": "Pass collision point/normal/distance in callback", "name": "[calc_pos_norm=false]", "type": "Boolean"}], "name": "append_collision_test"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Collision ID", "name": "collision_id", "type": "String"}], "name": "remove_collision_test"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Callision impulse test callback.", "name": "callback", "type": "CollisionImpulseCallback"}], "name": "apply_collision_impulse_test"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "clear_collision_impulse_test"}, {"params": [{"desc": "Source object, pass a non-null value to perform ray casting", "name": "obj_src", "type": "?Object3D"}, {"desc": "From vector", "name": "from", "type": "Vec3"}, {"desc": "To vector", "name": "to", "type": "Vec3"}, {"desc": "Collision ID, \"ANY\" for any collision ID", "name": "collision_id", "type": "String"}, {"desc": "Ray Test callback", "name": "callback", "type": "RayTestCallback"}, {"desc": "Automatically remove test after ray casting.", "name": "[autoremove=false]", "type": "Boolean"}], "name": "append_ray_test", "return": {"desc": "Ray Test ID", "type": "Number"}}, {"params": [{"desc": "Source object, pass a non-null value to perform ray casting", "name": "obj_src", "type": "?Object3D"}, {"desc": "From vector", "name": "from", "type": "Vec3"}, {"desc": "To vector", "name": "to", "type": "Vec3"}, {"desc": "Collision ID, \"ANY\" for any collision ID", "name": "collision_id", "type": "String"}, {"desc": "Ray Test callback", "name": "callback", "type": "RayTestCallback|RayTestCallbackPosNorm"}, {"desc": "Automatically remove test after ray casting.", "name": "[autoremove=false]", "type": "Boolean"}, {"desc": "Test for all possible objects along the ray or", "name": "[calc_all_hits=false]", "type": "Boolean"}, {"desc": "Calculate and return hit point's position/normal in", "name": "[calc_pos_norm=false]", "type": "Boolean"}, {"desc": "Ignore rotation of source object", "name": "[ign_src_rot=false]", "type": "Boolean"}], "name": "append_ray_test_ext", "return": {"desc": "Ray Test ID", "type": "Number"}}, {"params": [{"desc": "Ray Test ID", "name": "id", "type": "Number"}], "name": "remove_ray_test"}, {"params": [{"desc": "Ray Test ID", "name": "id", "type": "Number"}, {"desc": "New from vector", "name": "from", "type": "Vec3"}, {"desc": "New to vector", "name": "to", "type": "Vec3"}], "name": "change_ray_test_from_to"}, {"params": [{"desc": "Pivot type", "name": "pivot_type", "type": "String"}, {"desc": "Object 3D A", "name": "obj_a", "type": "Object3D"}, {"desc": "Translation of pivot frame relative to A", "name": "trans_a", "type": "Vec3"}, {"desc": "Rotation of pivot frame relative to A", "name": "quat_a", "type": "Quat"}, {"desc": "Object 3D B", "name": "obj_b", "type": "Object3D"}, {"desc": "Translation of pivot frame relative to B", "name": "trans_b", "type": "Vec3"}, {"desc": "Rotation of pivot frame relative to B", "name": "quat_b", "type": "Quat"}, {"desc": "Object containting constraint limits", "name": "limits", "type": "ConstraintLimits"}, {"desc": "6-dimensional vector with constraint stiffness", "name": "[stiffness=null]", "type": "Float32Array"}, {"desc": "6-dimensional vector with constraint damping", "name": "[damping=null]", "type": "Float32Array"}], "name": "apply_constraint"}, {"params": [{"desc": "Object A.", "name": "obj_a", "type": "Object3D"}], "name": "remove_constraint"}, {"params": [{"desc": "Object 3D A", "name": "obj_a", "type": "Object3D"}, {"desc": "Translation of pivot frame relative to A", "name": "trans_a", "type": "Vec3"}, {"desc": "Rotation of pivot frame relative to A", "name": "quat_a", "type": "Quat"}, {"desc": "Object 3D B", "name": "obj_b", "type": "Object3D"}, {"desc": "Translation of pivot frame relative to B", "name": "trans_b", "type": "Vec3"}, {"desc": "Rotation of pivot frame relative to B", "name": "quat_b", "type": "Quat"}], "name": "pull_to_constraint_pivot"}], "name": "physics", "const": [{"name": "CM_WALK", "type": "CharacterMoveType"}, {"name": "CM_RUN", "type": "CharacterMoveType"}, {"name": "CM_CLIMB", "type": "CharacterMoveType"}, {"name": "CM_FLY", "type": "CharacterMoveType"}]}, {"method": [{"params": [{"desc": "Canvas texture name", "name": "id", "type": "String"}, {"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}], "name": "get_canvas_texture_context", "return": {"desc": "Canvas texture context", "type": "CanvasRenderingContext2D"}}, {"params": [{"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}, {"desc": "Canvas texture name", "name": "id", "type": "String"}], "name": "update_canvas_texture_context"}, {"params": [{"desc": "Texture name", "name": "texture_name", "type": "String"}, {"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}], "name": "play_video"}, {"params": [{"desc": "Texture name", "name": "texture_name", "type": "String"}, {"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}], "name": "pause_video"}, {"params": [{"desc": "Texture name", "name": "texture_name", "type": "String"}, {"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}], "name": "reset_video"}], "name": "textures", "const": []}, {"method": [{"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Delay after exec in seconds", "name": "[when=0]", "type": "Number"}, {"desc": "Duration of the speaker's playback cycle (in", "name": "[duration=0]", "type": "Number"}], "name": "play"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "play_def"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_play"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Duration in float seconds", "name": "[duration=0]", "type": "Number"}, {"desc": "Playback rate", "name": "[playrate=1]", "type": "Number"}], "name": "speaker_play", "depricated": {"desc": "Use play() or play_def() instead", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "speaker_stop", "depricated": {"desc": "Use stop() instead", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "stop"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "pause"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "resume"}, {"depricated": {"desc": "Use playrate() instead", "is_depricated": true}, "name": "speaker_playback_rate"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Playback rate (1.0 - normal speed).", "name": "playrate", "type": "Number"}], "name": "playrate"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "playrate", "return": {"desc": "Playback rate", "type": "Number"}}, {"params": [{"desc": "Speaker object.", "name": "obj", "type": "Object3D"}, {"desc": "New cyclic flag value.", "name": "cyclic", "type": "Boolean"}], "name": "cyclic"}, {"params": [{"desc": "Speaker object.", "name": "obj", "type": "Object3D"}], "name": "is_cyclic", "return": {"desc": "Cyclic flag value.", "type": "Boolean"}}, {"params": [{"desc": "The listener new speed", "name": "speed", "type": "Number"}, {"desc": "The listener new direction", "name": "[dir=null]", "type": "?Float32Array"}], "name": "listener_reset_speed"}, {"params": [{"desc": "Speaker object.", "name": "obj", "type": "Object3D"}, {"desc": "The speaker's new speed", "name": "speed", "type": "Number"}, {"desc": "The speaker's new direction", "name": "[dir=null]", "type": "?Float32Array"}], "name": "speaker_reset_speed"}, {"params": [{"desc": "Object 3D or null for MASTER volume", "name": "obj", "type": "?Object3D"}], "name": "get_volume", "return": {"desc": "Volume (0..1)", "type": "Number"}}, {"params": [{"desc": "Object 3D or null for MASTER volume", "name": "obj", "type": "?Object3D"}, {"desc": "Volume (0..1)", "name": "volume", "type": "Number"}], "name": "set_volume"}, {"params": [{"desc": "Speaker object or null for all of them", "name": "obj", "type": "?Object3D"}, {"desc": "New state", "name": "muted", "type": "Boolean"}], "name": "mute"}, {"params": [{"desc": "Speaker object or null for all of them.", "name": "obj", "type": "?Object3D"}], "name": "is_muted", "return": {"desc": "Speaker object array", "type": "Array"}}, {"depricated": {"desc": "Use get_speaker_objects() instead", "is_depricated": true}, "name": "get_speakers"}, {"name": "check_active_speakers", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Params object", "name": "params", "type": "CompressorParams"}], "name": "set_compressor_params"}, {"name": "get_compressor_params", "return": {"desc": "Params object", "type": "CompressorParams"}}, {"params": [{"desc": "Object 3D or null for MASTER", "name": "obj", "type": "?Object3D"}, {"desc": "Duck amount.", "name": "value", "type": "Number"}, {"desc": "Time to change volume.", "name": "time", "type": "Number"}], "name": "duck"}, {"params": [{"desc": "Object 3D or null for MASTER", "name": "obj", "type": "?Object3D"}], "name": "unduck"}, {"params": [{"desc": "Array of objects.", "name": "objs", "type": "Object3D[]"}, {"desc": "Number of seconds between tracks", "name": "delay", "type": "Number"}, {"desc": "Randomize playback sequence", "name": "random", "type": "Boolean"}], "name": "apply_playlist"}, {"name": "clear_playlist"}, {"params": [{"desc": "Required container", "name": "[hint=\"ogg\"]", "type": "String"}], "name": "detect_audio_container", "return": {"desc": "Supported containter or \"\"", "type": "String"}}, {"params": [{"desc": "Required container", "name": "[hint=\"webm\"]", "type": "String"}], "name": "detect_video_container", "return": {"desc": "Supported containter or \"\"", "type": "String"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Params object", "name": "params", "type": "PositionalParams"}], "name": "set_positional_params"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_positional_params", "return": {"desc": "Params object", "type": "PositionalParams"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Params object", "name": "params", "type": "FilterParams"}], "name": "set_filter_params"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_filter_params", "return": {"desc": "Params object", "type": "FilterParams"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Input array with frequencies.", "name": "freq_arr", "type": "Float32Array"}, {"desc": "Ouput array with filter response magnitudes.", "name": "mag_arr", "type": "Float32Array"}, {"desc": "Output array with filter response phases.", "name": "phase_arr", "type": "Float32Array"}], "name": "get_filter_freq_response"}, {"params": [{"desc": "Speaker object.", "name": "obj", "type": "?Object3D"}], "name": "get_volume", "return": {"desc": "Duration", "type": "Number"}}], "name": "sfx", "const": []}, {"method": [{"name": "draw_mixer_strip"}, {"params": [{"desc": "Plot header", "name": "header", "type": "String"}, {"desc": "Slot number", "name": "slot", "type": "Number"}, {"desc": "Array", "name": "arr", "type": "Float32Array"}, {"desc": "Minimum plot argument value", "name": "arg_min", "type": "Number"}, {"desc": "Maximum plot argument value", "name": "arg_max", "type": "Number"}, {"desc": "Minimum plot value", "name": "val_min", "type": "Number"}, {"desc": "Maximum plot value", "name": "val_max", "type": "Number"}], "name": "plot_array"}], "name": "hud", "const": []}, {"method": [{"params": [{"desc": "expression result", "name": "Boolean", "type": "Boolean"}], "name": "assert"}, {"params": [{"desc": "Key", "name": "key", "type": "String"}, {"desc": "Value", "name": "value", "type": "*"}, {"desc": "Array of objects.", "name": "array", "type": "Object[]"}], "name": "keyfind", "return": {"desc": "Array of found objects.", "type": "Object[]"}}, {"params": [{"desc": "Key.", "name": "key", "type": "String"}, {"desc": "Value.", "name": "value", "type": "*"}, {"desc": "Array of objects.", "name": "array", "type": "Array"}], "name": "keysearch", "return": {"desc": "First found object or null.", "type": "?Object"}}, {"params": [{"desc": "4x4 matrix", "name": "matrix", "type": "Mat4"}], "name": "matrix_to_quat", "return": {"desc": "Quaternion", "type": "Quat"}}, {"params": [{"desc": "Euler vector", "name": "euler", "type": "Euler"}, {"desc": "Destination quaternion vector", "name": "quat", "type": "Quat"}], "name": "euler_to_quat", "return": {"desc": "Quaternion vector", "type": "Quat"}}, {"params": [{"desc": "Quaternion vector", "name": "quat", "type": "Quat"}, {"desc": "Destination euler vector", "name": "euler", "type": "Euler"}], "name": "quat_to_euler", "return": {"desc": "Euler vector", "type": "Euler"}}, {"params": [{"desc": "Input value", "name": "value", "type": "Number"}], "name": "sign", "return": {"desc": "-1,0,1 for negative, zero or positive number accordingly", "type": "Number"}}, {"params": [{"desc": "Input value", "name": "value", "type": "Number"}, {"desc": "Lower bound", "name": "min", "type": "Number"}, {"desc": "Upper bound", "name": "max", "type": "Number"}], "name": "clamp", "return": {"desc": "Clamped value", "type": "Number"}}, {"params": [{"desc": "Rotation quaternion", "name": "quat", "type": "Quat"}, {"desc": "Identity vector", "name": "ident", "type": "Vec3"}, {"desc": "Destination vector", "name": "[dest]", "type": "Vec3"}], "name": "quat_to_dir", "return": {"desc": "Destination vector.", "type": "Vec3"}}, {"params": [{"desc": "Source quaternion.", "name": "quat", "type": "Quat"}], "name": "ground_project_quat", "return": {"desc": "Destination quaternion.", "type": "Quat"}}, {"params": [{"desc": "Camera quaternion.", "name": "quat", "type": "Quat"}, {"desc": "Destination quaternion.", "name": "[dest]", "type": "Quat"}], "name": "cam_quat_to_mesh_quat", "return": {"desc": "Destination quaternion.", "type": "Quat"}}, {"params": [{"desc": "Quaternion to project.", "name": "quat", "type": "Quat"}, {"desc": "Direction corresponding to the identity quaternion.", "name": "quat_ident_dir", "type": "Vec3"}, {"desc": "Plane direction (normal).", "name": "plane", "type": "Vec3"}, {"desc": "Direction corresponding to the", "name": "plane_ident_dir", "type": "Vec3"}, {"desc": "Destination quaternion.", "name": "[dest=quat.create()]", "type": "Quat"}], "name": "quat_project", "return": {"desc": "Destination quaternion.", "type": "Quat"}}, {"params": [{"desc": "Current value.", "name": "curr", "type": "Number"}, {"desc": "Last smoothed value.", "name": "last", "type": "Number"}, {"desc": "Time delta.", "name": "delta", "type": "Number"}, {"desc": "Mean lifetime for avaraging.", "name": "pariod", "type": "Number"}], "name": "smooth", "return": {"desc": "Smoothed value", "type": "Number"}}, {"params": [{"desc": "Current value.", "name": "curr", "type": "Float32Array"}, {"desc": "Last smoothed value.", "name": "last", "type": "Float32Array"}, {"desc": "Time delta.", "name": "delta", "type": "Float32Array"}, {"desc": "Mean lifetime for avaraging.", "name": "pariod", "type": "Float32Array"}, {"desc": "Smoothed value", "name": "[dest]", "type": "Float32Array"}], "name": "smooth_v", "return": {"desc": "Smoothed value", "type": "Float32Array"}}, {"params": [{"desc": "Object", "name": "o", "type": "Object"}, {"desc": "Dimension, allow any if not specified", "name": "[dimension=0]", "type": "Number"}], "name": "is_vector", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Quaternion to correct", "name": "quat", "type": "Quat"}, {"desc": "Disable upside-down camera view", "name": "up_only", "type": "Boolean"}], "name": "correct_cam_quat_up"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_mesh", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_armature", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Angle in radians", "name": "angle", "type": "Number"}], "name": "angle_wrap_0_2pi", "return": {"desc": "Converted angle", "type": "Number"}}, {"params": [{"desc": "Angle in radians", "name": "angle", "type": "Number"}, {"desc": "Value from in radians", "name": "from", "type": "Number"}, {"desc": "Value to in radians", "name": "to", "type": "Number"}], "name": "angle_wrap_periodic", "return": {"desc": "Converted angle", "type": "Number"}}, {"params": [{"desc": "Input value.", "name": "t", "type": "Number"}], "name": "smooth_step", "return": {"desc": "Result value.", "type": "Number"}}], "name": "util", "const": [{"name": "AXIS_X", "type": "Vec3"}, {"name": "AXIS_Y", "type": "Vec3"}, {"name": "AXIS_Z", "type": "Vec3"}, {"name": "AXIS_MX", "type": "Vec3"}, {"name": "AXIS_MY", "type": "Vec3"}, {"name": "AXIS_MZ", "type": "Vec3"}]}, {"method": [{"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Object 3D or [Armature object, Bone Name]", "name": "target", "type": "(Object3D|Array)"}, {"desc": "Offset, in the parent's local space.", "name": "offset", "type": "Vec3"}, {"desc": "Rotation offset, in the", "name": "[rotation_offset=null]", "type": "Quat"}, {"desc": "Scale offset, in the parent's local space.", "name": "[scale_offset=1]", "type": "Number"}], "name": "append_stiff"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Object 3D", "name": "target", "type": "Object3D"}, {"desc": "Offset, in the parent's local space", "name": "offset", "type": "Vec3"}, {"desc": "Initial rotation offset, in the", "name": "[rotation_offset]", "type": "Quat"}], "name": "append_semi_stiff"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Object 3D", "name": "target", "type": "Object3D"}, {"desc": "Offset, in the parent's local space", "name": "offset", "type": "Vec3"}, {"desc": "Initial rotation offset, in the", "name": "[rotation_offset]", "type": "Quat"}, {"desc": "Left camera rotation limit, in radians", "name": "clamp_left", "type": "Number"}, {"desc": "Right camera rotation limit, in radians", "name": "clamp_right", "type": "Number"}, {"desc": "Upward camera rotation limit, in radians", "name": "clamp_up", "type": "Number"}, {"desc": "Downward camera rotation limit, in radians", "name": "clamp_down", "type": "Number"}], "name": "append_semi_stiff_cam"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Object 3D", "name": "target", "type": "Object3D"}, {"desc": "Offset, in the parent's local space", "name": "offset", "type": "Vec3"}, {"desc": "Camera smoothness ratio", "name": "[softness=0.25]", "type": "Number"}], "name": "append_semi_soft_cam"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Object 3D", "name": "target", "type": "Object3D"}, {"desc": "Offset, in the parent's local space", "name": "offset", "type": "Vec3"}], "name": "append_stiff_trans"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Object 3D", "name": "target", "type": "Object3D"}, {"desc": "Offset, in the parent's world space", "name": "offset", "type": "Vec3"}], "name": "append_copy_trans"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Object 3D", "name": "target", "type": "Object3D"}, {"desc": "Offset, in the parent's local space", "name": "offset", "type": "Vec3"}, {"desc": "Rotation offset, in", "name": "[rotation_offset]", "type": "Quat"}], "name": "append_stiff_trans_rot"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Target object or position vector", "name": "target", "type": "(Object3D|Vec3)"}], "name": "append_track"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Target object or position vector", "name": "target", "type": "(Object3D|Vec3)"}, {"desc": "Minimum distance", "name": "dist_min", "type": "Number"}, {"desc": "Maximum distance", "name": "dist_max", "type": "Number"}], "name": "append_follow"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Camera object.", "name": "camobj", "type": "Object3D"}, {"desc": "X offset as fraction to camera height.", "name": "x_rel", "type": "Number"}, {"desc": "Y offset as fraction to camera height.", "name": "y_rel", "type": "Number"}, {"desc": "Distance from the camera", "name": "dist", "type": "Number"}], "name": "append_stiff_viewport"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "remove"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_parent"}], "name": "constraints", "const": []}, {"method": [{"params": [{"desc": "Initial custom sensor value", "name": "value", "type": "Number"}], "name": "create_custom_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Sensor key KEY_*", "name": "key", "type": "Number"}], "name": "create_keyboard_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Collision object.", "name": "obj", "type": "Object3D"}, {"desc": "Collision ID", "name": "[collision_id=\"ANY\"]", "type": "String"}, {"desc": "Should the sensor return the", "name": "[calc_pos_norm=false]", "type": "Boolean"}], "name": "create_collision_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Collision object.", "name": "obj", "type": "Object3D"}], "name": "create_collision_impulse_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Source object, pass a non-null value to perform ray casting", "name": "obj_src", "type": "Object3D"}, {"desc": "From vector.", "name": "from", "type": "Vec3"}, {"desc": "To vector.", "name": "to", "type": "Vec3"}, {"desc": "Collision ID to detect intersection with", "name": "[collision_id=\"ANY\"]", "type": "String"}, {"desc": "Calculate the value of the sensor as", "name": "[is_binary_value=false]", "type": "Boolean"}, {"desc": "Calculate hit position/normal", "name": "[calc_pos_norm=false]", "type": "Boolean"}, {"desc": "Ignore any rotation of the source object", "name": "[ign_src_rot=false]", "type": "Boolean"}], "name": "create_ray_sensor", "return": {"desc": "Sensor object.", "type": "Sensor"}}, {"name": "create_mouse_click_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"name": "create_mouse_wheel_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Coordinate(s) to track: \"X\", \"Y\", \"XY\"", "name": "[axis=\"XY\"]", "type": "String"}], "name": "create_mouse_move_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Coordinate(s) to track: \"X\", \"Y\" or \"XY\"", "name": "[axis=\"XY\"]", "type": "String"}], "name": "create_touch_move_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"name": "create_touch_zoom_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Translation velocity threshold,", "name": "[threshold=0.1]", "type": "Number"}, {"desc": "Rotation velocity threshold,", "name": "[rotation_threshold=0.1]", "type": "Number"}], "name": "create_motion_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Vertical velocity threshold,", "name": "[threshold=1.0]", "type": "Number"}], "name": "create_vertical_velocity_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"name": "create_gyroscope_angles_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"name": "create_gyroscope_angles_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Timer period, in seconds", "name": "period", "type": "Number"}, {"desc": "Re-start the timer upon expiration", "name": "[do_repeat=false]", "type": "Boolean"}], "name": "create_timer_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Object's manifold ID", "name": "manifold_id", "type": "String"}, {"desc": "Sensor's number in the manifold", "name": "num", "type": "Number"}, {"desc": "A new period value for the sensor", "name": "period", "type": "Number"}], "name": "reset_timer_sensor"}, {"name": "create_elapsed_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "If true, reset the sensor (set it to 0)", "name": "[auto_release=false]", "type": "Boolean"}], "name": "create_timeline_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"name": "create_selection_sensor", "return": {"desc": "Sensor object", "type": "Sensor"}}, {"params": [{"desc": "Sensor object", "name": "sensor", "type": "Sensor"}, {"desc": "New sensor value", "name": "value", "type": "Number"}], "name": "set_custom_sensor"}, {"params": [{"desc": "Sensor object", "name": "sensor", "type": "Sensor"}], "name": "get_custom_sensor", "return": {"desc": "Sensor value", "type": "Number"}}, {"params": [{"desc": "Object 3D, or null to denote the global object", "name": "obj", "type": "?Object3D"}, {"desc": "Object's manifold ID", "name": "manifold_id", "type": "String"}, {"desc": "Sensor index in manifold's array", "name": "num", "type": "Number"}], "name": "get_sensor_value", "return": {"desc": "Sensor value", "type": "Number"}}, {"params": [{"desc": "Object 3D, or null to denote the global object", "name": "obj", "type": "?Object3D"}, {"desc": "Object's manifold ID", "name": "manifold_id", "type": "String"}, {"desc": "Sensor index in manifold's array", "name": "num", "type": "Number"}], "name": "get_sensor_payload", "return": {"desc": "Sensor payload", "type": "*"}}, {"params": [{"desc": "Object 3D to attach the manifold to, or null to denote", "name": "obj", "type": "?Object3D"}, {"desc": "New manifold ID.", "name": "id", "type": "String"}, {"desc": "Manifold control type (CT_SHOT, CT_TRIGGER etc).", "name": "type", "type": "Number"}, {"desc": "Array of sensors.", "name": "sensors", "type": "Sensor[]"}, {"desc": "Manifold's logic function.", "name": "logic_fun", "type": "ManifoldLogicFunction"}, {"desc": "Manifold's callback.", "name": "callback", "type": "ManifoldCallback"}, {"desc": "Parameter to pass to the manifold's callback", "name": "[callback_param]", "type": "*"}], "name": "create_sensor_manifold"}, {"params": [{"desc": "Object 3D to attach the manifold to, or null to denote", "name": "obj", "type": "?Object3D"}, {"desc": "New manifold ID", "name": "id", "type": "String"}, {"desc": "Manifold control type (CT_SHOT, CT_TRIGGER etc)", "name": "type", "type": "Number"}, {"desc": "Sensor key KEY_*", "name": "key", "type": "Number"}, {"desc": "Manifold's callback", "name": "callback", "type": "ManifoldCallback"}, {"desc": "Parameter to pass to the manifold's callback", "name": "[callback_param]", "type": "*"}], "name": "create_kb_sensor_manifold"}, {"params": [{"desc": "Object 3D, or null to denote the global object", "name": "obj", "type": "?Object3D"}], "name": "check_sensor_manifolds", "return": {"desc": "Result of the check", "type": "Boolean"}}, {"params": [{"desc": "Object 3D, or null to denote the global object", "name": "obj", "type": "?Object3D"}, {"desc": "Manifold ID", "name": "id", "type": "String"}], "name": "check_sensor_manifold", "return": {"desc": "Result of the check", "type": "Boolean"}}, {"params": [{"desc": "Object 3D to delete manifolds from, or null to denote", "name": "obj", "type": "?Object3D"}], "name": "remove_sensor_manifolds", "depricated": {"desc": "Use remove_sensor_manifold with null manifold ID instead", "is_depricated": true}}, {"params": [{"desc": "Object 3D to delete the manifold from, or null to denote", "name": "obj", "type": "?Object3D"}, {"desc": "ID of the sensor manifold, or null to delete all", "name": "[id=null]", "type": "String"}], "name": "remove_sensor_manifold"}, {"params": [{"desc": "HTML element to add event listeners to", "name": "element", "type": "HTMLElement"}, {"desc": "Prevent browsers' default actions for", "name": "prevent_default", "type": "Boolean"}], "name": "reset"}, {"params": [{"desc": "HTML element to add event listeners to", "name": "element", "type": "HTMLElement"}, {"desc": "Prevent browser default actions for", "name": "prevent_default", "type": "Boolean"}, {"desc": "Continue receiving mouse events", "name": "[allow_element_exit=false]", "type": "Boolean"}], "name": "register_keyboard_events"}, {"params": [{"desc": "HTML element to add event listeners to", "name": "element", "type": "HTMLElement"}, {"desc": "Prevent browser default actions for", "name": "prevent_default", "type": "Boolean"}], "name": "register_mouse_events"}, {"params": [{"desc": "HTML element to add event listeners to", "name": "element", "type": "HTMLElement"}, {"desc": "Prevent browser default actions for", "name": "prevent_default", "type": "Boolean"}], "name": "register_wheel_events"}, {"name": "register_touch_events"}, {"params": [{"desc": "HTML element to remove event listeners from", "name": "element", "type": "HTMLElement"}], "name": "register_device_orientation"}, {"params": [{"desc": "HTML element to remove event listeners from", "name": "element", "type": "HTMLElement"}], "name": "unregister_keyboard_events"}, {"params": [{"desc": "HTML element to remove event listeners from", "name": "element", "type": "HTMLElement"}], "name": "unregister_mouse_events"}, {"params": [{"desc": "HTML element to remove event listeners from", "name": "element", "type": "HTMLElement"}], "name": "unregister_wheel_events"}, {"name": "unregister_touch_events"}, {"name": "unregister_device_orientation"}], "name": "controls", "const": []}, {"method": [{"name": "version", "return": {"desc": "Version: [yy, mm]", "type": "Array"}}, {"name": "version_str", "return": {"desc": "Version string", "type": "String"}}, {"name": "type", "return": {"desc": "Release type", "type": "String"}}, {"name": "date", "return": {"desc": "Date", "type": "Date"}}, {"name": "date_str", "return": {"desc": "Date string in the format: \"dd.mm.yyyy hh.mm.ss\"", "type": "String"}}], "name": "version", "const": []}, {"method": [{"params": [{"desc": "Name of scene", "name": "scene_name", "type": "String"}], "name": "set_active"}, {"name": "get_active", "return": {"desc": "Active scene name", "type": "String"}}, {"name": "get_scenes", "return": {"desc": "Array of scene names.", "type": "String[]"}}, {"name": "get_active_camera", "return": {"desc": "Camera object.", "type": "Object3D"}}, {"params": [{"desc": "Object name", "name": "name", "type": "String"}, {"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}], "name": "get_object_by_name", "return": {"desc": "Object 3D", "type": "Object3D"}}, {"params": [{"desc": "Name of the EMPTY object used to duplicate the object", "name": "empty_name", "type": "String"}, {"desc": "Name of the duplicated object", "name": "dupli_name", "type": "String"}, {"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}], "name": "get_object_by_dupli_name", "return": {"desc": "Object 3D", "type": "Object3D"}}, {"params": [{"desc": "List of the EMPTY and DUPLI object names: [empty_name,empty_name,...,dupli_name].", "name": "name_list", "type": "String[]"}, {"desc": "ID of loaded data.", "name": "[data_id=0]", "type": "Number"}], "name": "get_object_by_dupli_name_list", "return": {"desc": "Object 3D.", "type": "Object3D"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_object_data_id", "return": {"desc": "data_id Data ID property", "type": "Number"}}, {"params": [{"desc": "X Canvas coordinate.", "name": "x", "type": "Number"}, {"desc": "Y Canvas coordinate.", "name": "y", "type": "Number"}], "name": "pick_object"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Is enabled?", "name": "value", "type": "Boolean"}], "name": "outlining_is_enabled"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Intensity value", "name": "value", "type": "Number"}], "name": "set_outline_intensity"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_outline_intensity", "return": {"desc": "Intensity value", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Outlining duration", "name": "tau", "type": "Number"}, {"desc": "Period of outlining", "name": "T", "type": "Number"}, {"desc": "Number of relapses (0 - infinity)", "name": "N", "type": "Number"}], "name": "apply_outline_anim"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "apply_outline_anim_def"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "clear_outline_anim"}, {"params": [{"desc": "RGB color vector", "name": "color", "type": "RGB"}], "name": "set_outline_color"}, {"params": [{"desc": "Destination RGB color vector", "name": "dest", "type": "?RGB"}], "name": "get_outline_color", "return": {"desc": "Destination RGB color vector", "type": "RGB"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Intensity value", "name": "value", "type": "Number"}], "name": "set_glow_intensity", "depricated": {"desc": "use set_outline_intensity() instead", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_glow_intensity", "return": {"desc": "Intensity value", "type": "Number"}, "depricated": {"desc": "use get_outline_intensity() instead", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Glowing duration", "name": "tau", "type": "Number"}, {"desc": "Period of glowing", "name": "T", "type": "Number"}, {"desc": "Number of relapses (0 - infinity)", "name": "N", "type": "Number"}], "name": "apply_glow_anim", "depricated": {"desc": "use apply_outline_anim() instead", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "apply_glow_anim_def", "depricated": {"desc": "use apply_outline_anim_def() instead", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "clear_glow_anim", "depricated": {"desc": "use clear_outline_anim() instead", "is_depricated": true}}, {"params": [{"desc": "RGB color vector", "name": "color", "type": "RGB"}], "name": "set_glow_color", "depricated": {"desc": "use set_outline_color() instead", "is_depricated": true}}, {"params": [{"desc": "Destination RGB color vector.", "name": "dest", "type": "?RGB"}], "name": "get_glow_color", "return": {"desc": "Destination RGB color vector.", "type": "RGB"}, "depricated": {"desc": "use get_outline_color() instead", "is_depricated": true}}, {"name": "get_shadow_params", "return": {"desc": "Shadow params", "type": "ShadowParams"}}, {"params": [{"desc": "Shadow params", "name": "shadow_params", "type": "ShadowParams"}], "name": "set_shadow_params"}, {"name": "get_environment_colors", "return": {"desc": "Environment colors", "type": "Array"}}, {"params": [{"desc": "Environment Energy", "name": "[opt_environment_energy]", "type": "Number"}, {"desc": "Horizon color", "name": "[opt_horizon_color]", "type": "RGB"}, {"desc": "Zenith color", "name": "[opt_zenith_color]", "type": "RGB"}], "name": "set_environment_colors"}, {"params": [{"desc": "Destnation vector [C,C,C,D]", "name": "dest", "type": "Vec4"}], "name": "get_fog_color_density", "return": {"desc": "Destnation vector", "type": "Vec4"}}, {"params": [{"desc": "Color-density vector [C,C,C,D]", "name": "val", "type": "Vec4"}], "name": "set_fog_color_density"}, {"name": "get_ssao_params", "return": {"desc": "SSAO params", "type": "SSAOParams"}}, {"params": [{"desc": "SSAO params", "name": "ssao_params", "type": "SSAOParams"}], "name": "set_ssao_params"}, {"name": "get_color_correction_params", "return": {"desc": "Color correction params", "type": "ColorCorrectionParams"}}, {"params": [{"desc": "Color correction params.", "name": "color_corr_params", "type": "ColorCorrectionParams"}], "name": "set_color_correction_params"}, {"name": "get_sky_params", "return": {"desc": "Sky params", "type": "SkyParams"}}, {"params": [{"desc": "Sky params", "name": "sky_params", "type": "SkyParams"}], "name": "set_sky_params"}, {"name": "get_dof_params", "return": {"desc": "DOF params", "type": "DOFParams"}}, {"params": [{"desc": "params", "name": "DOF", "type": "DOFParams"}], "name": "set_dof_params"}, {"name": "get_god_rays_params", "return": {"desc": "god rays parameters", "type": "GodRaysParams"}}, {"params": [{"desc": "rays params", "name": "god", "type": "GodRaysParams"}], "name": "set_god_rays_params"}, {"name": "get_bloom_params", "return": {"desc": "bloom parameters", "type": "BloomParams"}}, {"params": [{"desc": "params", "name": "bloom", "type": "BloomParams"}], "name": "set_bloom_params"}, {"name": "get_glow_material_params", "return": {"desc": "glow material parameters", "type": "GlowMaterialParams"}}, {"params": [{"desc": "material params", "name": "glow", "type": "GlowMaterialParams"}], "name": "set_glow_material_params"}, {"name": "get_wind_params", "return": {"desc": "Wind params", "type": "WindParams"}}, {"params": [{"desc": "params", "name": "wind", "type": "WindParams"}], "name": "set_wind_params"}, {"name": "get_water_surface_level", "return": {"desc": "Surface level", "type": "Number"}}, {"params": [{"desc": "params", "name": "water", "type": "WaterParams"}], "name": "set_water_params"}, {"params": [{"desc": "params", "name": "water", "type": "WaterParams"}], "name": "get_water_mat_params"}, {"name": "update_scene_materials_params"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "hide_object"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "show_object"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_hidden", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_visible", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "check_object", "return": {"desc": "Check result", "type": "Boolean"}, "depricated": {"desc": "use check_object_by_name() instead", "is_depricated": true}}, {"params": [{"desc": "Object name", "name": "name", "type": "String"}, {"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}], "name": "check_object_by_name", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Name of the EMPTY object used to duplicate the object", "name": "empty_name", "type": "String"}, {"desc": "Name of the duplicated object", "name": "dupli_name", "type": "String"}, {"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}], "name": "check_object_by_dupli_name", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "List of the EMPTY and DUPLI object names: [empty_name,empty_name,...,dupli_name]", "name": "name_list", "type": "String[]"}, {"desc": "ID of loaded data", "name": "[data_id=0]", "type": "Number"}], "name": "check_object_by_dupli_name_list", "return": {"desc": "Check result", "type": "Boolean"}}, {"params": [{"desc": "Type", "name": "[type=\"ALL\"]", "type": "String"}, {"desc": "Objects data id", "name": "[data_id=DATA_ID_ALL]", "type": "Number"}], "name": "get_all_objects", "return": {"desc": "Array with objects.", "type": "Object3D[]"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_object_name", "return": {"desc": "Object name", "type": "String"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_object_type"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_object_dg_parent", "return": {"desc": "Object 3D of parent object", "type": "Object3D"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_object_children", "return": {"desc": "Array of children objects.", "type": "Object3D[]"}}, {"name": "get_first_character", "return": {"desc": "Character object.", "type": "Object3D"}}, {"params": [{"desc": "Current translation.", "name": "trans", "type": "Vec3"}, {"desc": "Vertical distance multiplier.", "name": "[v_dist_mult=1]", "type": "Number"}], "name": "get_shore_dist", "return": {"desc": "Distance.", "type": "Number"}}, {"name": "get_cam_water_depth", "return": {"desc": "Depth", "type": "Number"}}, {"params": [{"desc": "Object 3D.", "name": "obj", "type": "Object3D"}], "name": "get_type_mesh_object", "return": {"desc": "Render type: \"DYNAMIC\" or \"STATIC\".", "type": "String"}}, {"name": "get_meta_tags", "return": {"desc": "Scene meta tags", "type": "SceneMetaTags"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "append_object"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "remove_object"}, {"params": [{"desc": "Timeline marker name", "name": "name", "type": "String"}], "name": "marker_frame", "return": {"desc": "Timeline marker frame", "type": "Number"}}, {"name": "get_mb_params", "return": {"desc": "Motion blur params", "type": "MotionBlurParams"}}, {"params": [{"desc": "Motion blur params", "name": "mb_params", "type": "MotionBlurParams"}], "name": "set_mb_params"}], "name": "scenes", "const": []}, {"method": [{"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_animated"}, {"depricated": {"desc": "Use get_anim_names() instead.", "is_depricated": true}, "name": "get_actions", "return": {"desc": "Animation names.", "type": "String[]"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_current_action", "depricated": {"desc": "Use get_current_anim_name() instead.", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_anim_names", "return": {"desc": "Array of animation names.", "type": "String[]"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_current_anim_name", "return": {"desc": "Current animation name or null.", "type": "?String"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Animation name", "name": "name", "type": "String"}, {"desc": "= SLOT_0] Animation slot number.", "name": "[slot_num", "type": "AnimSlot"}], "name": "apply"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "remove"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number.", "name": "[slot_num", "type": "AnimSlot"}], "name": "remove_slot_animation"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "apply_def"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Callback to execute on finished animation", "name": "[finish_callback]", "type": "AnimFinishCallback"}, {"desc": "= SLOT_0] Animation slot number.", "name": "[slot_num", "type": "AnimSlot"}], "name": "play"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "stop"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "is_play"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Current frame", "name": "cff", "type": "Number"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "set_current_frame_float", "depricated": {"desc": "Use set_frame() instead.", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_current_frame_float", "depricated": {"desc": "Use get_frame() instead", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Current frame (float)", "name": "frame", "type": "Number"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "set_frame"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_frame", "return": {"desc": "Current frame", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Speed (may be negative) (float)", "name": "speed", "type": "Number"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "set_speed"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_speed"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_frame_range", "return": {"desc": "Frame range pair or null for incorrect object", "type": "Array"}, "depricated": {"desc": "Use get_anim_start_frame() and get_anim_length() instead", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_anim_start_frame", "return": {"desc": "Animation start frame or -1 for incorrect object", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_anim_length", "return": {"desc": "Animation length or -1 for incorrect object", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "cyclic", "depricated": {"desc": "Use set_behavior() instead.", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "is_cyclic", "depricated": {"desc": "Use get_behavior() instead.", "is_depricated": true}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Behavior enum", "name": "behavior", "type": "AnimBehavior"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "set_behavior"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_behavior", "return": {"desc": "Behavior enum", "type": "AnimBehavior"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Translation smoothing period", "name": "[trans_period=0]", "type": "Number"}, {"desc": "Rotation smoothing period", "name": "[quat_period=0]", "type": "Number"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "apply_smoothing"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Animation delay", "name": "elapsed", "type": "Number"}, {"desc": "= SLOT_0] Animation slot number", "name": "[slot_num", "type": "AnimSlot"}, {"desc": "= false] Update animation even stopped one.", "name": "[force_update", "type": "Boolean"}], "name": "update_object_animation", "depricated": {"desc": "Use set_frame() instead.", "is_depricated": true}}, {"params": [{"desc": "Frame number", "name": "frame", "type": "Number"}], "name": "frame_to_sec", "return": {"desc": "Number of seconds", "type": "Number"}}, {"params": [{"desc": "Armature object", "name": "armobj", "type": "Object3D"}, {"desc": "Bone name", "name": "bone_name", "type": "String"}, {"desc": "Destination vector", "name": "dest", "type": "Vec3"}], "name": "get_bone_translation"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_first_armature_object", "return": {"desc": "Armature object or null", "type": "?Object3D"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Animation name", "name": "anim_name", "type": "String"}], "name": "get_slot_num_by_anim", "return": {"desc": "Animation slot number", "type": "?Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "= SLOT_0] Slot number", "name": "[slot_num", "type": "AnimSlot"}], "name": "get_anim_type", "return": {"desc": "Animation type", "type": "AnimType"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Animation name.", "name": "name", "type": "String"}], "name": "apply_to_first_empty_slot", "return": {"desc": "Slot number or -1 if no empty slots found.", "type": "Number"}}, {"params": [{"desc": "Armature object.", "name": "armobj", "type": "Object3D"}], "name": "get_skel_mix_factor", "return": {"desc": "Mix factor.", "type": "Number"}}, {"params": [{"desc": "Armature object.", "name": "armobj", "type": "Object3D"}, {"desc": "Target animation mix factor.", "name": "factor", "type": "Number"}, {"desc": "Time interval for changing the mix factor from", "name": "[time=0]", "type": "Number"}], "name": "set_skel_mix_factor"}], "name": "animation", "const": [{"name": "SLOT_0", "type": "AnimSlot"}, {"name": "SLOT_1", "type": "AnimSlot"}, {"name": "SLOT_2", "type": "AnimSlot"}, {"name": "SLOT_3", "type": "AnimSlot"}, {"name": "SLOT_4", "type": "AnimSlot"}, {"name": "SLOT_5", "type": "AnimSlot"}, {"name": "SLOT_6", "type": "AnimSlot"}, {"name": "SLOT_7", "type": "AnimSlot"}, {"name": "SLOT_ALL", "type": "AnimSlot"}, {"name": "OBJ_ANIM_TYPE_NONE", "type": "AnimType"}, {"name": "OBJ_ANIM_TYPE_ARMATURE", "type": "AnimType"}, {"name": "OBJ_ANIM_TYPE_OBJECT", "type": "AnimType"}, {"name": "OBJ_ANIM_TYPE_VERTEX", "type": "AnimType"}, {"name": "OBJ_ANIM_TYPE_SOUND", "type": "AnimType"}, {"name": "OBJ_ANIM_TYPE_PARTICLES", "type": "AnimType"}, {"name": "OBJ_ANIM_TYPE_MATERIAL", "type": "AnimType"}, {"name": "AB_CYCLIC", "type": "AnimBehavior"}, {"name": "AB_FINISH_RESET", "type": "AnimBehavior"}, {"name": "AB_FINISH_STOP", "type": "AnimBehavior"}]}, {"method": [{"params": [{"desc": "Anchor object.", "name": "obj", "type": "Object3D"}, {"desc": "Anchor movement callback", "name": "anchor_move_cb", "type": "AnchorMoveCallback"}], "name": "attach_move_cb"}, {"params": [{"desc": "Anchor object.", "name": "obj", "type": "Object3D"}], "name": "detach_move_cb"}, {"params": [{"desc": "Anchor object.", "name": "obj", "type": "Object3D"}], "name": "is_anchor", "return": {"desc": "Check result.", "type": "Boolean"}}, {"params": [{"desc": "Anchor object.", "name": "obj", "type": "Object3D"}], "name": "get_element_id", "return": {"desc": "Element ID.", "type": "String"}}], "name": "anchors", "const": []}, {"method": [{"params": [{"desc": "Lamps type (\"POINT\", \"SPOT\", \"SUN\", \"HEMI\")", "name": "[lamps_type]", "type": "String"}], "name": "get_lamps", "return": {"desc": "Array with lamp objects.", "type": "Object3D[]"}}, {"name": "get_sun_params", "return": {"desc": "Sun params object", "type": "SunParams"}}, {"params": [{"desc": "sun parameters", "name": "sun_params", "type": "SunParams"}], "name": "set_sun_params"}, {"params": [{"desc": "new time (0.0...24.0)", "name": "time", "type": "Number"}], "name": "set_day_time"}, {"params": [{"desc": "new date", "name": "date", "type": "Date"}], "name": "set_date"}, {"params": [{"desc": "New angle in degrees (0..90)", "name": "angle", "type": "Number"}], "name": "set_max_sun_angle"}, {"params": [{"desc": "Lamp object", "name": "lamp_obj", "type": "Object3D"}], "name": "get_light_params", "return": {"desc": "Light params", "type": "LightParams"}}, {"params": [{"desc": "Lamp object.", "name": "lamp_obj", "type": "Object3D"}], "name": "get_light_type", "return": {"desc": "Light type", "type": "String"}}, {"params": [{"desc": "Lamp object.", "name": "lamp_obj", "type": "Object3D"}, {"desc": "Light params", "name": "light_params", "type": "LightParams"}], "name": "set_light_params"}], "name": "lights", "const": []}, {"method": [{"name": "create", "return": {"desc": "New TSR vector", "type": "TSR"}}, {"params": [{"desc": "X translation.", "name": "x", "type": "Number"}, {"desc": "Y translation.", "name": "y", "type": "Number"}, {"desc": "Z translation.", "name": "z", "type": "Number"}, {"desc": "Scale.", "name": "s", "type": "Number"}, {"desc": "X quaternion rotation.", "name": "qx", "type": "Number"}, {"desc": "Y quaternion rotation.", "name": "qy", "type": "Number"}, {"desc": "Z quaternion rotation.", "name": "qz", "type": "Number"}, {"desc": "W quaternion rotation.", "name": "qw", "type": "Number"}], "name": "from_values", "return": {"desc": "New TSR vector", "type": "TSR"}}, {"params": [{"desc": "Source TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Destination TSR vector", "name": "tsr2", "type": "TSR"}], "name": "copy"}, {"params": [{"desc": "TSR vector", "name": "tsr", "type": "TSR"}], "name": "identity"}, {"params": [{"desc": "Translation vector", "name": "trans", "type": "Vec3"}, {"desc": "Scale", "name": "scale", "type": "Number"}, {"desc": "Rotation quaternion", "name": "quat", "type": "Quat"}, {"desc": "Destination TSR vector", "name": "[dest]", "type": "TSR"}], "name": "create_sep", "return": {"desc": "dest Destination TSR vector", "type": "TSR"}}, {"params": [{"desc": "Translation vector", "name": "trans", "type": "Vec3"}, {"desc": "Scale", "name": "scale", "type": "Number"}, {"desc": "Rotation quaternion", "name": "quat", "type": "Quat"}, {"desc": "Destination TSR vector", "name": "dest", "type": "TSR"}], "name": "set_sep"}, {"params": [{"desc": "Translation vector", "name": "trans", "type": "Vec3"}, {"desc": "Destination TSR vector", "name": "dest", "type": "TSR"}], "name": "set_trans"}, {"params": [{"desc": "Scale", "name": "scale", "type": "Number"}, {"desc": "Destination TSR vector", "name": "dest", "type": "TSR"}], "name": "set_scale"}, {"params": [{"desc": "Translation+Scale vector", "name": "transcale", "type": "vec4"}, {"desc": "Destination TSR vector", "name": "dest", "type": "TSR"}], "name": "set_transcale"}, {"params": [{"desc": "Rotation quaternion", "name": "quat", "type": "Quat"}, {"desc": "Destination TSR vector", "name": "dest", "type": "TSR"}], "name": "set_quat"}, {"params": [{"desc": "TSR vector", "name": "tsr", "type": "TSR"}], "name": "get_trans_view", "return": {"desc": "Translation part of TSR", "type": "Vec3"}}, {"name": "get_scale", "return": {"desc": "Scale", "type": "Number"}}, {"name": "get_quat_view", "return": {"desc": "Quaternion part of TSR", "type": "Quat"}}, {"params": [{"desc": "TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Destination TSR vector", "name": "dest", "type": "TSR"}], "name": "invert", "return": {"desc": "Destination TSR vector", "type": "TSR"}}, {"params": [{"desc": "TSR vector.", "name": "tsr", "type": "TSR"}, {"desc": "Destination matrix.", "name": "[dest=mat4.create()]", "type": "?Mat4"}], "name": "to_mat4", "return": {"desc": "Destination matrix.", "type": "Mat4"}}, {"params": [{"desc": "Matrix.", "name": "mat", "type": "Mat4"}, {"desc": "Destination TSR vector.", "name": "dest", "type": "TSR"}], "name": "from_mat4", "return": {"desc": "Destination TSR vector.", "type": "TSR"}}, {"params": [{"desc": "First TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Second TSR vector", "name": "tsr2", "type": "TSR"}, {"desc": "Destination TSR vector", "name": "dest", "type": "TSR"}], "name": "multiply", "return": {"desc": "Destination TSR vector", "type": "TSR"}}, {"params": [{"desc": "Vector to transform", "name": "trans", "type": "Vec3"}, {"desc": "TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Destination vector", "name": "dest", "type": "Vec3"}], "name": "transform_vec3"}, {"params": [{"desc": "Vector to transform", "name": "trans", "type": "Vec3"}, {"desc": "TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Destination vector", "name": "dest", "type": "Vec3"}], "name": "transform_vec3_inv"}, {"params": [{"desc": "Array of vectors to transform", "name": "vectors", "type": "Float32Array"}, {"desc": "TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Destination array of vectors", "name": "new_vectors", "type": "Float32Array"}, {"desc": "Offset in new_vectors array", "name": "[dest_offset=0]", "type": "Number"}], "name": "transform_vectors", "return": {"desc": "Destination array of vectors", "type": "Float32Array"}}, {"params": [{"desc": "Array of vectors to transform", "name": "vectors", "type": "Float32Array"}, {"desc": "TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Destination array of vectors", "name": "new_vectors", "type": "Float32Array"}, {"desc": "Offset in new_vectors array", "name": "[dest_offset=0]", "type": "Number"}], "name": "transform_dir_vectors", "return": {"desc": "Destination array of vectors", "type": "Float32Array"}}, {"params": [{"desc": "Vector to transform", "name": "trans", "type": "Vec3"}, {"desc": "TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Destination vector", "name": "dest", "type": "Vec3"}], "name": "transform_dir_vec3"}, {"params": [{"desc": "Array of vectors to transform", "name": "vectors", "type": "Float32Array"}, {"desc": "TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Destination array of vectors", "name": "new_vectors", "type": "Float32Array"}, {"desc": "Offset in new_vectors array", "name": "[dest_offset=0]", "type": "Number"}], "name": "transform_tangents", "return": {"desc": "Destination array of vectors", "type": "Float32Array"}}, {"params": [{"desc": "TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Translation vector", "name": "trans", "type": "Vec3"}, {"desc": "Destination TSR vector", "name": "dest", "type": "TSR"}], "name": "translate", "return": {"desc": "Destination TSR vector", "type": "TSR"}}, {"params": [{"desc": "First TSR vector", "name": "tsr", "type": "TSR"}, {"desc": "Second TSR vector", "name": "tsr2", "type": "TSR"}, {"desc": "Interpolation factor", "name": "factor", "type": "Number"}, {"desc": "Destination TSR vector", "name": "dest", "type": "TSR"}], "name": "interpolate", "return": {"desc": "Destination TSR vector", "type": "TSR"}}], "name": "tsr", "const": []}, {"method": [{"params": [{"desc": "Array of the assets in the following format: [[uri, type, filepath, optional_param], ...]", "name": "assets_pack", "type": "Array"}, {"desc": "Callback executed after a single asset is loaded", "name": "[asset_cb]", "type": "AssetCallback"}, {"desc": "Callback executed after the whole pack of assets is loaded", "name": "[pack_cb]", "type": "PackCallback"}, {"desc": "Callback for the progress of loading", "name": "[progress_cb]", "type": "ProgressCallback"}, {"desc": "Loaded data", "name": "data", "type": "Data"}, {"desc": "Data URI", "name": "uri", "type": "String"}, {"desc": "Data type", "name": "type", "type": "Number"}, {"desc": "Data filepath", "name": "filepath", "type": "String"}, {"desc": "Optional parameter", "name": "[optional_param]", "type": "*"}, {"desc": "Loading percentage", "name": "value", "type": "Number"}], "name": "enqueue"}], "name": "assets", "const": []}, {"method": [{"name": "physics_stats"}, {"name": "physics_id"}, {"name": "visible_objects"}, {"name": "object_info"}, {"name": "objects_stat"}, {"name": "num_vertices"}, {"name": "num_triangles"}, {"name": "num_draw_calls"}, {"name": "num_shaders"}, {"name": "geometry_stats"}, {"name": "num_textures"}, {"name": "num_render_targets"}, {"name": "make_camera_frustum_shot"}, {"name": "make_light_frustum_shot"}, {"name": "scenegraph_to_dot"}, {"name": "controls_info"}, {"name": "object_distance"}, {"name": "msg"}, {"name": "fbmsg"}, {"name": "print_telemetry"}, {"name": "plot_telemetry"}, {"name": "fbres"}, {"name": "assert_constants"}, {"name": "mute_music"}, {"name": "check_finite"}, {"name": "set_debug_params"}], "name": "debug", "const": []}, {"method": [{"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_meta_tags", "return": {"desc": "Object meta tags", "type": "ObjectMetaTags"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "New unique object name", "name": "new_name", "type": "String"}, {"desc": "Copy WebGL buffers", "name": "[deep_copy=false]", "type": "Boolean"}], "name": "copy", "return": {"desc": "New object.", "type": "Object3D"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "List consisting of the material name, the names of", "name": "name_list", "type": "String[]"}, {"desc": "The value to set the Value node to", "name": "value", "type": "Number"}], "name": "set_nodemat_value"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "List consisting of the material name, the names of", "name": "name_list", "type": "String[]"}, {"desc": "The value to set the red channel of the RGB node to", "name": "r", "type": "Number"}, {"desc": "The value to set the green channel of the RGB node to", "name": "g", "type": "Number"}, {"desc": "The value to set the blue channel of the RGB node to", "name": "b", "type": "Number"}], "name": "set_nodemat_rgb"}], "name": "objects", "const": []}, {"method": [], "name": "rgb", "const": []}, {"method": [{"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "X coord", "name": "x", "type": "Number"}, {"desc": "Y coord", "name": "y", "type": "Number"}, {"desc": "Z coord", "name": "z", "type": "Number"}], "name": "set_translation"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Translation vector", "name": "trans", "type": "Vec3"}], "name": "set_translation_v"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "X coord", "name": "x", "type": "Number"}, {"desc": "Y coord", "name": "y", "type": "Number"}, {"desc": "Z coord", "name": "z", "type": "Number"}, {"desc": "Parent object.", "name": "obj_parent", "type": "Object3D"}], "name": "set_translation_rel"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Destination vector", "name": "[dest]", "type": "Vec3"}], "name": "get_translation", "return": {"desc": "Destination vector", "type": "Vec3"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "X part of quaternion", "name": "x", "type": "Number"}, {"desc": "Y part of quaternion", "name": "y", "type": "Number"}, {"desc": "Z part of quaternion", "name": "z", "type": "Number"}, {"desc": "W part of quaternion", "name": "w", "type": "Number"}], "name": "set_rotation"}, {"depricated": {"desc": "Use set_rotation() instead", "is_depricated": true}, "name": "set_rotation_quat"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Quaternion vector", "name": "quat", "type": "Quat"}], "name": "set_rotation_v"}, {"depricated": {"desc": "Use set_rotation_v() instead", "is_depricated": true}, "name": "set_rotation_quat_v"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Destination vector", "name": "[opt_dest]", "type": "Quat"}], "name": "get_rotation", "return": {"desc": "Destination vector", "type": "Quat"}}, {"depricated": {"desc": "Use get_rotation() instead", "is_depricated": true}, "name": "get_rotation_quat"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Angle X", "name": "x", "type": "Number"}, {"desc": "Angle Y", "name": "y", "type": "Number"}, {"desc": "Angle Z", "name": "z", "type": "Number"}], "name": "set_rotation_euler"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Vector with euler angles", "name": "euler", "type": "Vec3"}], "name": "set_rotation_euler_v"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Object scale", "name": "scale", "type": "Number"}], "name": "set_scale"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_scale", "return": {"desc": "scale", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "empty_reset_transform"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_object_size", "return": {"desc": "Object size", "type": "Number"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Use the object's bounding sphere to", "name": "calc_bs_center", "type": "Boolean"}, {"desc": "Destination vector", "name": "[dest]", "type": "Vec3"}], "name": "get_object_center", "return": {"desc": "Destination vector", "type": "Vec3"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "DeltaX coord", "name": "x", "type": "Number"}, {"desc": "DeltaY coord", "name": "y", "type": "Number"}, {"desc": "DeltaZ coord", "name": "z", "type": "Number"}], "name": "move_local"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_object_bounding_box", "return": {"desc": "Bounding box", "type": "BoundingBox"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Destination vector.", "name": "[dest]", "type": "TSR"}], "name": "get_tsr", "return": {"desc": "Destination vector.", "type": "TSR"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "vector", "name": "tsr", "type": "TSR"}, {"desc": "Object 3D 1", "name": "obj1", "type": "Object3D"}, {"desc": "Object 3D 2", "name": "obj2", "type": "Object3D"}], "name": "set_tsr", "return": {"desc": "Distance", "type": "Number"}}], "name": "transform", "const": [{"name": "SPACE_LOCAL", "type": "Space"}, {"name": "SPACE_WORLD", "type": "Space"}]}, {"method": [{"params": [{"desc": "Canvas element for WebGL", "name": "elem_canvas_webgl", "type": "HTMLCanvasElement"}, {"desc": "Canvas element for HUD", "name": "[elem_canvas_hud]", "type": "HTMLCanvasElement"}, {"desc": "Check flag", "name": "val", "type": "Boolean"}], "name": "init", "return": {"desc": "WebGL context or null", "type": "WebGLRenderingContext|Null"}}, {"name": "set_check_gl_errors"}, {"params": [{"desc": "New canvas width", "name": "width", "type": "Number"}, {"desc": "New canvas height", "name": "height", "type": "Number"}, {"desc": "Change canvas CSS width/height", "name": "[update_canvas_css=true]", "type": "Boolean"}], "name": "resize"}, {"params": [{"desc": "FPS callback", "name": "fps_cb", "type": "FPSCallback"}], "name": "set_fps_callback"}, {"name": "clear_fps_callback"}, {"params": [{"desc": "Render callback", "name": "callback", "type": "RenderCallback"}], "name": "set_render_callback"}, {"name": "clear_render_callback"}, {"depricated": {"desc": "Use time.get_timeline() instead", "is_depricated": true}, "name": "global_timeline", "return": {"desc": "Floating-point number of seconds elapsed since the engine start-up", "type": "Number"}}, {"depricated": {"desc": "Never required", "is_depricated": true}, "name": "redraw"}, {"name": "pause"}, {"name": "resume"}, {"name": "is_paused", "return": {"desc": "Paused flag", "type": "Boolean"}}, {"name": "reset"}, {"depricated": {"desc": "Use container.get_canvas() instead", "is_depricated": true}, "name": "get_canvas_elem", "return": {"desc": "Canvas element", "type": "HTMLCanvasElement"}}, {"params": [{"desc": "Callback", "name": "callback", "type": "LoopCallback"}], "name": "append_loop_cb"}, {"params": [{"desc": "Callback", "name": "callback", "type": "LoopCallback"}], "name": "remove_loop_cb"}], "name": "main", "const": []}, {"method": [{"params": [{"desc": "Property name", "name": "prop", "type": "String"}, {"desc": "New property value", "name": "value", "type": "*"}], "name": "set"}, {"params": [{"desc": "Property name", "name": "prop", "type": "String"}], "name": "get", "return": {"desc": "Value of property", "type": "*"}}, {"name": "reset"}, {"name": "get_std_assets_path", "return": {"desc": "Path to assets", "type": "String"}}], "name": "config", "const": [{"name": "P_LOW", "type": "QualityProfile"}, {"name": "P_HIGH", "type": "QualityProfile"}, {"name": "P_ULTRA", "type": "QualityProfile"}, {"name": "P_CUSTOM", "type": "QualityProfile"}]}, {"method": [{"params": [{"desc": "NLA animation frame", "name": "frame", "type": "Number"}], "name": "set_nla_frame"}, {"name": "get_frame", "return": {"desc": "NLA animation current frame.", "type": "Number"}}, {"name": "stop"}, {"params": [{"desc": "Nla finish callback.", "name": "[callback=null]", "type": "?NlaFinishCallback"}], "name": "play"}, {"name": "is_play", "return": {"desc": "Check result.", "type": "Boolean"}}, {"name": "get_frame_start", "return": {"desc": "Start frame.", "type": "Number"}}, {"name": "get_frame_end", "return": {"desc": "End frame.", "type": "Number"}}, {"name": "check_nla", "return": {"desc": "Check result.", "type": "Boolean"}}, {"name": "check_nla_scripts", "return": {"desc": "Check result.", "type": "Boolean"}}, {"params": [{"desc": "Start NLA animation frame", "name": "start_frame", "type": "Number"}, {"desc": "End NLA animation frame", "name": "end_frame", "type": "Number"}], "name": "set_range"}, {"name": "reset_range"}, {"params": [{"desc": "Cyclic behavior.", "name": "is_cyclic", "type": "Boolean"}], "name": "set_cyclic"}, {"name": "clear_callback"}], "name": "nla", "const": []}, {"method": [{"name": "report_repeatful_compilation"}, {"name": "get_compiled"}], "name": "shaders", "const": []}, {"method": [{"params": [{"desc": "Timeout callback", "name": "callback", "type": "timeout_callback"}, {"desc": "Timeout", "name": "time", "type": "Number"}], "name": "set_timeout", "return": {"desc": "Timeout ID", "type": "Number"}}, {"params": [{"desc": "Timeout ID", "name": "id", "type": "Number"}], "name": "clear_timeout"}, {"name": "get_timeline", "return": {"desc": "Timeline", "type": "Number"}}, {"params": [{"desc": "Value to animate from ", "name": "from", "type": "Number"}, {"desc": "Value to animate to", "name": "to", "type": "Number"}, {"desc": "Period of time to animate the value", "name": "timeout", "type": "Number"}, {"desc": "Animation callback", "name": "anim_cb", "type": "anim_callback"}], "name": "animate"}], "name": "time", "const": []}, {"method": [{"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_camera", "return": {"desc": "Checking result.", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_target_camera", "return": {"desc": "Checking result.", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_eye_camera", "return": {"desc": "Checking result.", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "is_hover_camera", "return": {"desc": "Checking result.", "type": "Boolean"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Camera movement style", "name": "move_style", "type": "CameraMoveStyle"}], "name": "set_move_style", "return": {"desc": "success Operation success flag.", "type": "Boolean"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "get_move_style", "return": {"desc": "Camera movement style.", "type": "CameraMoveStyle"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Camera velocity params (velocity_trans, velocity_rot, velocity_zoom)", "name": "velocity", "type": "Vec3"}], "name": "set_velocity_params"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Velocity params [velocity_trans, velocity_rot,", "name": "[dest=vec3.create()]", "type": "Vec3"}], "name": "get_velocity_params", "return": {"desc": "Velocity params [velocity_trans, velocity_rot,", "type": "Vec3"}}, {"params": [{"desc": "Camera object.", "name": "camobj", "type": "Object3D"}, {"desc": "Eye vector.", "name": "eye", "type": "Vec3"}, {"desc": "Target vector.", "name": "target", "type": "Vec3"}, {"desc": "Up vecto.", "name": "up", "type": "Vec3"}], "name": "set_look_at"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Destination eye vector.", "name": "[dest=vec3.create()]", "type": "Vec3"}], "name": "get_eye", "return": {"desc": "Destination eye vector.", "type": "Vec3"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "New pivot vector.", "name": "coords", "type": "Vec3"}], "name": "set_pivot"}, {"params": [{"desc": "Camera Object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Translation vector", "name": "trans", "type": "Vec3"}, {"desc": "Pivot vector", "name": "pivot", "type": "Vec3"}], "name": "set_trans_pivot"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Destination pivot vector.", "name": "[dest]", "type": "Vec3"}], "name": "get_pivot", "return": {"desc": "Destination pivot vector.", "type": "Vec3"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Azimuth angle in radians", "name": "delta_phi", "type": "Number"}, {"desc": "Elevation angle in radians", "name": "delta_theta", "type": "Number"}], "name": "rotate_pivot", "depricated": {"desc": "use rotate_camera() or rotate_target_camera() instead.", "is_depricated": true}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Delta of the horizontal translation", "name": "trans_h_delta", "type": "Number"}, {"desc": "Delta of the vertical translation", "name": "trans_v_delta", "type": "Number"}], "name": "move_pivot"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Horizontal angle in radians", "name": "angle", "type": "Number"}], "name": "rotate_hover_cam", "depricated": {"desc": "Use rotate_camera() or rotate_hover_camera() instead.", "is_depricated": true}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "get_hover_cam_angle", "return": {"desc": "An angle of the hover camera", "type": "Number"}, "depricated": {"desc": "Use get_camera_angles() instead.", "is_depricated": true}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Angle between the view and the horizontal plane", "name": "angle", "type": "Number"}], "name": "set_hover_cam_angle", "depricated": {"desc": "Use rotate_camera() or rotate_hover_camera() instead.", "is_depricated": true}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Destination vector [hover_angle_limits.down, hover_angle_limits.up].", "name": "[angles]", "type": "Vec2"}], "name": "get_hover_angle_limits", "return": {"desc": "Destination vector [hover_angle_limits.down, hover_angle_limits.up].", "type": "Vec2"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Array of distance limits [distance_max, distance_min].", "name": "[dist]", "type": "Vec2"}], "name": "get_cam_dist_limits", "return": {"desc": "Array of distance limits [distance_max, distance_min].", "type": "Vec2"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Translation vector", "name": "trans", "type": "Vec3"}], "name": "translate_hover_cam_v", "depricated": {"desc": "Use hover_cam_set_translation() instead.", "is_depricated": true}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Translation vector.", "name": "trans", "type": "Vec3"}], "name": "hover_cam_set_translation"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Pivot vector", "name": "coords", "type": "Vec3"}], "name": "set_hover_pivot"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Destination translation pivot vector.", "name": "[dest=vec3.create()]", "type": "Vec3"}], "name": "get_hover_cam_pivot", "return": {"desc": "Destination translation pivot vector.", "type": "Vec3"}}, {"params": [{"desc": "Camera object.", "name": "camobj", "type": "Object3D"}], "name": "has_distance_limits", "return": {"desc": "True if the camera has distance limits.", "type": "Boolean"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Vertical down limit", "name": "down_value", "type": "Number"}, {"desc": "Vertical up limit", "name": "up_value", "type": "Number"}, {"desc": "Space to make clamping relative to (actual for the TARGET/EYE camera)", "name": "[space=transform.SPACE_WORLD]", "type": "Space"}], "name": "apply_vertical_limits"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "clear_vertical_limits"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Horizontal left limit", "name": "left_value", "type": "Number"}, {"desc": "Horizontal right limit", "name": "right_value", "type": "Number"}, {"desc": "Space to make clamping relative to (actual for the TARGET/EYE camera)", "name": "[space=transform.SPACE_WORLD]", "type": "Space"}], "name": "apply_horizontal_limits"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "clear_horizontal_limits"}, {"params": [{"desc": "Camera Object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Destination vector for the camera angle limits: [left, right].", "name": "[dest]", "type": "Vec2"}], "name": "get_horizontal_limits", "return": {"desc": "Destination vector for the camera angle limits: [left, right].", "type": "?Vec2"}}, {"params": [{"desc": "Camera Object 3D", "name": "camobj", "type": "Object3D"}], "name": "has_horizontal_limits", "return": {"desc": "True if the camera has horizontal limits.", "type": "Boolean"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Down hover angle limit", "name": "down_angle", "type": "Number"}, {"desc": "Up hover angle limit", "name": "up_angle", "type": "Number"}], "name": "apply_hover_angle_limits"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "clear_hover_angle_limits"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Minimum distance to target", "name": "min", "type": "Number"}, {"desc": "Maximum distance to target", "name": "max", "type": "Number"}], "name": "apply_distance_limits"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "clear_distance_limits"}, {"depricated": {"desc": "Use rotate_camera() or rotate_eye_camera() to change the camera orientation.", "is_depricated": true}, "name": "set_eye_params"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "is_look_up"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Azimuth angle in radians", "name": "phi", "type": "Number"}, {"desc": "Elevation angle in radians", "name": "theta", "type": "Number"}, {"desc": "For phi angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "name": "[phi_is_abs=false]", "type": "Boolean"}, {"desc": "For theta angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "name": "[theta_is_abs=false]", "type": "Boolean"}], "name": "rotate_camera"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Azimuth angle in radians", "name": "phi", "type": "Number"}, {"desc": "Elevation angle in radians", "name": "theta", "type": "Number"}, {"desc": "For phi angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "name": "[phi_is_abs=false]", "type": "Boolean"}, {"desc": "For theta angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "name": "[theta_is_abs=false]", "type": "Boolean"}], "name": "rotate_target_camera"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Azimuth angle in radians", "name": "phi", "type": "Number"}, {"desc": "Elevation angle in radians", "name": "theta", "type": "Number"}, {"desc": "For phi angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "name": "[phi_is_abs=false]", "type": "Boolean"}, {"desc": "For theta angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "name": "[theta_is_abs=false]", "type": "Boolean"}], "name": "rotate_eye_camera"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Azimuth angle in radians", "name": "phi", "type": "Number"}, {"desc": "Elevation angle in radians", "name": "theta", "type": "Number"}, {"desc": "For phi angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "name": "[phi_is_abs=false]", "type": "Boolean"}, {"desc": "For theta angle: if FALSE performs delta rotation, if TRUE sets camera absolute rotation", "name": "[theta_is_abs=false]", "type": "Boolean"}], "name": "rotate_hover_camera"}, {"params": [{"desc": "Camera Object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Azimuth angle delta in radians", "name": "delta_phi", "type": "Number"}, {"desc": "Elevation angle delta in radians", "name": "delta_theta", "type": "Number"}], "name": "rotate", "depricated": {"desc": "Use rotate_camera() or rotate_eye_camera() instead.", "is_depricated": true}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Destination vector for the camera angles: [phi, theta],", "name": "[dest]", "type": "Vec2"}], "name": "get_camera_angles", "return": {"desc": "Destination vector for the camera angles: [phi, theta]", "type": "Vec2"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Destination vector for the camera angles: [phi, theta],", "name": "[dest]", "type": "Vec2"}], "name": "get_camera_angles_char", "return": {"desc": "Destination vector for the camera angles: [phi, theta]", "type": "Vec2"}}, {"params": [{"desc": "Camera Object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Destination vector for the camera angles: [h, v]", "name": "[dest]", "type": "Vec2"}], "name": "get_angles", "return": {"desc": "Destination vector for the camera angles: [h, v]", "type": "Vec2"}, "depricated": {"desc": "Use get_camera_angles() instead.", "is_depricated": true}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Distance from the convergence plane", "name": "conv_dist", "type": "Number"}], "name": "set_stereo_distance"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "get_stereo_distance", "return": {"desc": "Distance from convergence plane", "type": "Number"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "is_underwater", "depricated": {"desc": "Always returns false.", "is_depricated": true}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "X coord (positive - left to right)", "name": "x", "type": "Number"}, {"desc": "Y coord (positive - down to up)", "name": "y", "type": "Number"}, {"desc": "Rotation angle (clockwise)", "name": "angle", "type": "Number"}], "name": "translate_view"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "get_fov", "return": {"desc": "Camera field of view (in radians)", "type": "Number"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "New camera field of view (in radians)", "name": "fov", "type": "Number"}], "name": "set_fov"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Axis vector", "name": "y_axis", "type": "Vec3"}], "name": "correct_up"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "zoom_object"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Orthogonal scale.", "name": "ortho_scale", "type": "Number"}], "name": "set_ortho_scale"}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}], "name": "get_ortho_scale", "return": {"desc": "Orthogonal scale", "type": "Number"}}, {"params": [{"desc": "Camera Object 3D", "name": "camobj", "type": "Object3D"}], "name": "is_ortho_camera", "return": {"desc": "In case of the orthogonal type of the camera it is true, else false", "type": "Boolean"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "X Canvas coordinate", "name": "canvas_x", "type": "Number"}, {"desc": "Y Canvas coordinate", "name": "canvas_y", "type": "Number"}, {"desc": "Destination vector", "name": "[dest]", "type": "Vec3"}], "name": "calc_ray", "return": {"desc": "Destination vector", "type": "Vec3"}}, {"params": [{"desc": "Camera object 3D", "name": "camobj", "type": "Object3D"}, {"desc": "Point in world space", "name": "point", "type": "Vec3"}, {"desc": "Destination canvas coordinates (vec2 - X/Y, vec3 - X/Y/DEPTH).", "name": "[dest]", "type": "Vec2|Vec3"}], "name": "project_point", "return": {"desc": "Destination canvas coordinates.", "type": "Vec2|Vec3"}}], "name": "camera", "const": [{"name": "MS_STATIC", "type": "CameraMoveStyle"}, {"name": "MS_ANIMATION", "type": "CameraMoveStyle"}, {"name": "MS_TARGET_CONTROLS", "type": "CameraMoveStyle"}, {"name": "MS_EYE_CONTROLS", "type": "CameraMoveStyle"}, {"name": "MS_HOVER_CONTROLS", "type": "CameraMoveStyle"}]}, {"method": [{"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Attribute name (a_position, a_normal, a_tangent)", "name": "attrib_name", "type": "String"}], "name": "extract_vertex_array", "return": {"desc": "Vertex array", "type": "Float32Array"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}], "name": "extract_index_array", "return": {"desc": "Array of triangle indices", "type": "Uint16Array|Uint32Array"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Attribute name (a_position, a_normal, a_tangent)", "name": "attrib_name", "type": "String"}, {"desc": "The new array", "name": "array", "type": "Float32Array"}], "name": "update_vertex_array"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Material name", "name": "mat_name", "type": "String"}, {"desc": "Array of triangle indices", "name": "ibo_array", "type": "Uint16Array|Uint32Array"}, {"desc": "New vertex positions array", "name": "positions_array", "type": "Float32Array"}, {"desc": "Enable normals smoothing", "name": "smooth_normals", "type": "Boolean"}], "name": "override_geometry"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Shape key name", "name": "key_name", "type": "String"}, {"desc": "Shape key value", "name": "value", "type": "Number"}], "name": "set_shape_key_value"}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "check_shape_keys", "return": {"desc": "Checking result.", "type": "Boolean"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}], "name": "get_shape_keys_names", "return": {"desc": "Array of animation names", "type": "String[]"}}, {"params": [{"desc": "Object 3D", "name": "obj", "type": "Object3D"}, {"desc": "Shape key name", "name": "key_name", "type": "String"}], "name": "get_shape_key_value", "return": {"desc": "value Shape key value", "type": "Number"}}], "name": "geometry", "const": []}, {"method": [{"name": "get_canvas", "return": {"desc": "Canvas element", "type": "HTMLElement"}}, {"name": "get_container", "return": {"desc": "Canvas container element", "type": "HTMLElement"}}, {"params": [{"desc": "Inserted DOM element.", "name": "obj", "type": "HTMLElement"}, {"desc": "Inserted DOM element stack order (one of \"FIRST\",", "name": "stack_order", "type": "String"}], "name": "insert_to_container"}, {"params": [{"desc": "Left offset for the container", "name": "left", "type": "Number"}, {"desc": "Top offset for the container", "name": "top", "type": "Number"}], "name": "set_canvas_offsets"}, {"name": "update_canvas_offsets"}, {"params": [{"desc": "X client coordinate.", "name": "x", "type": "Number"}, {"desc": "Y client coordinate.", "name": "y", "type": "Number"}, {"desc": "CSS coordinates relative to the Canvas.", "name": "dest", "type": "Vec2"}], "name": "client_to_canvas_coords", "return": {"desc": "CSS coordinates relative to the Canvas.", "type": "Vec2"}}, {"name": "force_offsets_updating"}], "name": "container", "const": []}, {"method": [{"params": [{"desc": "Emitter object.", "name": "obj", "type": "Object3D"}, {"desc": "Particles system name.", "name": "psys_name", "type": "String"}, {"desc": "Particles size.", "name": "size", "type": "Number"}], "name": "set_size"}, {"params": [{"desc": "Emitter object.", "name": "obj", "type": "Object3D"}, {"desc": "Particles system name.", "name": "psys_name", "type": "String"}, {"desc": "Particles normal factor.", "name": "nfactor", "type": "Number"}], "name": "set_normal_factor"}, {"params": [{"desc": "Emitter object.", "name": "obj", "type": "Object3D"}, {"desc": "Particles system name.", "name": "psys_name", "type": "String"}, {"desc": "Particles num factor.", "name": "factor", "type": "Number"}], "name": "set_factor"}], "name": "particles", "const": []}, {"method": [{"params": [{"desc": "Path to JSON file", "name": "path", "type": "String"}, {"desc": "Callback to be executed right after load", "name": "[loaded_cb=null]", "type": "LoadedCallback"}, {"desc": "Callback to report about the loading progress", "name": "[stageload_cb=null]", "type": "StageloadCallback"}, {"desc": "Wait until all resources are loaded", "name": "[wait_complete_loading=false]", "type": "Boolean"}, {"desc": "Hide loaded and disable physics objects", "name": "[load_hidden=false]", "type": "Boolean"}], "name": "load", "return": {"desc": "ID of loaded data.", "type": "Number"}}, {"params": [{"desc": "ID of unloaded data. Unload all data if data_id is zero.", "name": "[data_id=0]", "type": "Number"}], "name": "unload"}, {"params": [{"desc": "App root directory.", "name": "debug_resources_root", "type": "String"}], "name": "set_debug_resources_root"}, {"name": "is_primary_loaded", "return": {"desc": "Check result", "type": "Boolean"}}], "name": "data", "const": []}]